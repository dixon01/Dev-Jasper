<?xml version="1.0" encoding="utf-8"?>

<helpItems xmlns="http://msh" schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlContent</command:name>
		<maml:description>
			<maml:para>Insert custom markup inside a specific part in a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlContent</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlContent cmdlet injects custom xml markup inside a given part from a Wordprocessing document</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlContent</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>PartPath</maml:name>
				<maml:description>
					<maml:para>URI path of a part inside the Word Processing document package.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query after whose results the new content will be added.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>Content</maml:name>
				<maml:description>
					<maml:para>Xml fragment to be injected into the part</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="3">
			<maml:name>PartPath</maml:name>
			<maml:description>
				<maml:para>URI path of a part inside the Word Processing document package.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query after whose results the new content will be added.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>Content</maml:name>
			<maml:description>
				<maml:para>Xml fragment to be injected into the part</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlContentFormat</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlContentStyle</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlDigitalSignature</command:name>
		<maml:description>
			<maml:para>Inserts a new digital signature inside a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlDigitalSignature</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlDigitalSignature cmdlet uses a digital certificate to digitally sign a Wordprocessing document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlDigitalSignature</maml:name>
    <command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to digitally-sign. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
    </command:parameter>
    <command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
    </command:parameter>
    <command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByPropertyName)" position = "3" >
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>File (including the path if needed) containing the digital certificate used for generation of the digital signature. The certificate must be X509 compatible.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to digitally-sign. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>File (including the path if needed) containing the digital certificate used for generation of the digital signature. The certificate must be X509 compatible.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlDigitalSignature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-OpenXmlDigitalSignature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlDocumentIndex</command:name>
		<maml:description>
			<maml:para>Generate the index of a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlDocumentIndex</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlDocumentIndex cmdlet creates an index based on the index references found in the document. The index will be created at the end of the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlDocumentIndex</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) where the index will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>StylesSourcePath</maml:name>
				<maml:description>
					<maml:para>Path to a styles file that contains the styles needed for the index (Index1).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AddDefaultStyles</maml:name>
				<maml:description>
					<maml:para>Specify if the default styles should be created or if the styles should be found in the StylesSourcePath.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) where the index will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>StylesSourcePath</maml:name>
			<maml:description>
				<maml:para>Path to a styles file that contains the styles needed for the index (Index1).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddDefaultStyles</maml:name>
			<maml:description>
				<maml:para>Specify if the default styles should be created or if the styles should be found in the StylesSourcePath.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOA</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOC</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOF</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlDocumentTOA</command:name>
		<maml:description>
			<maml:para>Generate the TOA (Table Of Authorities) of a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlDocumentTOA</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlDocumentTOA cmdlet creates a Table of Authorities based on the citations (references or authorities) found in the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlDocumentTOA</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) where the TOA will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query expression that specifies where the table of authorities will be inserted into the document.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Switches</maml:name>
				<maml:description>
					<maml:para>String that specifies how to create the table of authorities. See examples and Open XML document section 17.16.5.67 for details about its format.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) where the TOA will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query expression that specifies where the table of authorities will be inserted into the document.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Switches</maml:name>
			<maml:description>
				<maml:para>String that specifies how to create the table of authorities. See examples and Open XML document section 17.16.5.67 for details about its format.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>PassThru</maml:name>
      <maml:description>
        <maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentIndex</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOC</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOF</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlDocumentTOC</command:name>
		<maml:description>
			<maml:para>Generate the TOC (Table Of Contents) of a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlDocumentTOC</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlDocumentTOC cmdlet creates a Table of Contents based on the headings found in the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlDocumentTOC</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) where the TOC will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query expression that specifies where the table of contents will be inserted into the document.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Switches</maml:name>
				<maml:description>
					<maml:para>String that specifies how to create the table of contents. See examples and Open XML document section 17.16.5.68 for details about its format.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) where the TOC will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query expression that specifies where the table of contents will be inserted into the document.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Switches</maml:name>
			<maml:description>
				<maml:para>String that specifies how to create the table of contents. See examples and Open XML document section 17.16.5.68 for details about its format.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>PassThru</maml:name>
      <maml:description>
        <maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentIndex</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOA</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOF</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlDocumentTOF</command:name>
		<maml:description>
			<maml:para>Generate the TOF (Table Of Figures) of a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlDocumentTOF</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlDocumentTOF cmdlet creates a Table of Figures based on the figures found in the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlDocumentTOF</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) where the TOF will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query expression that specifies where the table of figures will be inserted into the document.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Switches</maml:name>
				<maml:description>
					<maml:para>String that specifies how to create the table of figures. See examples and Open XML document section 17.16.5.69 for details about its format.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) where the TOF will be generated. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query expression that specifies where the table of figures will be inserted into the document.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Switches</maml:name>
			<maml:description>
				<maml:para>String that specifies how to create the table of figures. See examples and Open XML document section 17.16.5.69 for details about its format.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>PassThru</maml:name>
      <maml:description>
        <maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentIndex</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOA</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDocumentTOC</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlPicture</command:name>
		<maml:description>
			<maml:para>Inserts a picture inside an OpenXML document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlPicture</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Add-OpenXmlPicture cmdlet inserts a picture at a specific location inside an OpenXML document. The picture will be stored inside the document as an embedded resource. Picture location is specified by an XPath query expression.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlPicture</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to add pictures to. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query after whose results the new image will be added.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>PicturePath</maml:name>
				<maml:description>
					<maml:para>Path to a file containing the picture to be added. This command requires this parameter or an image that is piped into the command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ImageFile</maml:name>
				<maml:description>
					<maml:para>Accepts System.IO.FileInfo objects as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns FileInfo objects (e.g. Get-ChildItem or Get-OpenXmlBackground).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >FileInfo</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to add pictures to. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query after whose results the new image will be added.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>PicturePath</maml:name>
			<maml:description>
				<maml:para>Path to a file containing the picture to be added. This command requires this parameter or an image that is piped into the command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>ImageFile</maml:name>
			<maml:description>
				<maml:para>Accepts System.IO.FileInfo objects as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns FileInfo objects (e.g. Get-ChildItem or Get-OpenXmlBackground).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
			<dev:type>
				<maml:name>FileInfo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument, FileInfo</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>The picture may be piped into the object by referring to the file containing that picture. The System.IO.FileInfo object is output by Get-ChildItem and Get-OpenXmlBackground -Image, among others.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlBackground</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Add-OpenXmlSpreadSheetTable</command:name>
		<maml:description>
			<maml:para>Add a new table definition to a worksheet in a Spreadsheet document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>OpenXmlSpreadSheetTable</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Add a new table definition to a worksheet in a Spreadsheet document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Add-OpenXmlSpreadSheetTable</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the spreadsheet document files to modify. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>TableStyle</maml:name>
				<maml:description>
					<maml:para>Table style to be applied to the table being added.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>FromColumn</maml:name>
				<maml:description>
					<maml:para>Initial column of table.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>ToColumn</maml:name>
				<maml:description>
					<maml:para>Final column of table.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>FromRow</maml:name>
				<maml:description>
					<maml:para>Initial row of table.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "7" >
				<maml:name>ToRow</maml:name>
				<maml:description>
					<maml:para>Final row of table.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "8" >
				<maml:name>WorksheetName</maml:name>
				<maml:description>
					<maml:para>Name of worksheet where the table will be added.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HasHeaders</maml:name>
				<maml:description>
					<maml:para>If present, it indicates that the first row in table range will be a filtered header row.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the spreadsheet document files to modify. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>TableStyle</maml:name>
			<maml:description>
				<maml:para>Table style to be applied to the table being added.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>FromColumn</maml:name>
			<maml:description>
				<maml:para>Initial column of table.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>ToColumn</maml:name>
			<maml:description>
				<maml:para>Final column of table.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>FromRow</maml:name>
			<maml:description>
				<maml:para>Initial row of table.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="7">
			<maml:name>ToRow</maml:name>
			<maml:description>
				<maml:para>Final row of table.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="8">
			<maml:name>WorksheetName</maml:name>
			<maml:description>
				<maml:para>Name of worksheet where the table will be added.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>HasHeaders</maml:name>
      <maml:description>
        <maml:para>If present, it indicates that the first row in table range will be a filtered header row.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Confirm-OpenXmlValid</command:name>
		<maml:description>
			<maml:para>Validate all the XML elements in a document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Confirm</command:verb>
		<command:noun>OpenXmlValid</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Checks every element and attribute of the XML in all parts of the document. Any errors will output as ValidationInfo objects that have detailed information about the error along with the path of the document with the error.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Confirm-OpenXmlValid</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) whose contents will be validated. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) whose contents will be validated. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerTools.ValidationInfo</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Edit-OpenXmlChange</command:name>
		<maml:description>
			<maml:para>Confirms or rejects tracked changes in a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Edit</command:verb>
		<command:noun>OpenXmlChange</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The resulting document will not have any tracked changes in it. The Accept parameter causes all tracked changes to be accepted. The Reject parameter is not yet implemented.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Edit-OpenXmlChange</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Accept</maml:name>
				<maml:description>
					<maml:para>Signals that the tracked changes should be accepted. (Note: There is currently no Reject option, but that is a probable future enhancement.)</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Accept</maml:name>
			<maml:description>
				<maml:para>Signals that the tracked changes should be accepted. (Note: There is currently no Reject option, but that is a probable future enhancement.)</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Remove-OpenXmlMarkup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Export-OpenXmlSpreadsheet</command:name>
		<maml:description>
			<maml:para>Generates a spreadsheet document from piped objects.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>OpenXmlSpreadsheet</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Export-OpenXmlSpreadsheet gets the public properties from any objects and generates a spreadsheet with columns showing for each property. Optionally, a chart can be created from a subset of those properties.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Export-OpenXmlSpreadsheet</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>Path of the file that will contain the new spreadsheet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>An array of objects whose properties will be shown into the resulting spreadsheet. This is usually supplied by piping the objects into the cmdlet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Chart</maml:name>
				<maml:description>
					<maml:para>Use this switch if you want to include a chart for a subset of object properties.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChartType</maml:name>
				<maml:description>
					<maml:para>Type of chart to include into the spreadsheet document. Valid types are Bar, Column, Pie, Area, and Line.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ChartType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ColumnsToChart</maml:name>
				<maml:description>
					<maml:para>List of columns to use as data series for charting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HeaderColumn</maml:name>
				<maml:description>
					<maml:para>Name of property to use as data category for charting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InitialRow</maml:name>
				<maml:description>
					<maml:para>Initial row to start copying the data</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>OutputPath</maml:name>
			<maml:description>
				<maml:para>Path of the file that will contain the new spreadsheet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>An array of objects whose properties will be shown into the resulting spreadsheet. This is usually supplied by piping the objects into the cmdlet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Chart</maml:name>
			<maml:description>
				<maml:para>Use this switch if you want to include a chart for a subset of object properties.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChartType</maml:name>
			<maml:description>
				<maml:para>Type of chart to include into the spreadsheet document. Valid types are Bar, Column, Pie, Area, and Line.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ChartType</command:parameterValue>
			<dev:type>
				<maml:name>ChartType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ColumnsToChart</maml:name>
			<maml:description>
				<maml:para>List of columns to use as data series for charting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HeaderColumn</maml:name>
			<maml:description>
				<maml:para>Name of property to use as data category for charting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitialRow</maml:name>
			<maml:description>
				<maml:para>Initial row to start copying the data</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Objects</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>A file will be created that contains the new spreadsheet document. The returned object will refer to that new document file.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Export-OpenXmlWordprocessing</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Export-OpenXmlToHtml</command:name>
		<maml:description>
			<maml:para>Exports Wordprocessing documents to html documents</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>OpenXmlToHtml</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Export-OpenXmlToHtml cmdlet transforms the content of Wordprocessing documents into an html file. Any images are stored in a separate subfolder with matching references in the html file.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Export-OpenXmlToHtml</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to export to html. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>PageTitle</maml:name>
				<maml:description>
					<maml:para>The HTML page will be created with this title.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>The path of the output folder that will contain the created files.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>ImageFolder</maml:name>
				<maml:description>
					<maml:para>Path to a folder where images will be stored. The default is a folder named &quot;images&quot; at the same path as the original document.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>ImagePrefix</maml:name>
				<maml:description>
					<maml:para>Image files will be created with this prefix followed by a sequence number.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>CssPath</maml:name>
				<maml:description>
					<maml:para>Path and name of a file that contains the CSS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "7" >
				<maml:name>CssClassPrefix</maml:name>
				<maml:description>
					<maml:para>This prefix will be added to the document style name to create the CSS class.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to export to html. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>PageTitle</maml:name>
			<maml:description>
				<maml:para>The HTML page will be created with this title.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>OutputPath</maml:name>
			<maml:description>
				<maml:para>The path of the output folder that will contain the created files.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>ImageFolder</maml:name>
			<maml:description>
				<maml:para>Path to a folder where images will be stored. The default is a folder named &quot;images&quot; at the same path as the original document.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>ImagePrefix</maml:name>
			<maml:description>
				<maml:para>Image files will be created with this prefix followed by a sequence number.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>CssPath</maml:name>
			<maml:description>
				<maml:para>Path and name of a file that contains the CSS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="7">
			<maml:name>CssClassPrefix</maml:name>
			<maml:description>
				<maml:para>This prefix will be added to the document style name to create the CSS class.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Export-OpenXmlWordprocessing</command:name>
		<maml:description>
			<maml:para>Create a new Wordprocessing document from text.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>OpenXmlWordprocessing</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Export-OpenXmlWordprocessing uses plain text to create a Wordprocessing document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Export-OpenXmlWordprocessing</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>Path and name of the file to create with the new content.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Text</maml:name>
				<maml:description>
					<maml:para>The text to included in the document.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>OutputPath</maml:name>
			<maml:description>
				<maml:para>Path and name of the file to create with the new content.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Text</maml:name>
			<maml:description>
				<maml:para>The text to included in the document.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Text to be contained inside a new Wordprocessing document.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Export-OpenXmlSpreadsheet</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlBackground</command:name>
		<maml:description>
			<maml:para>Extracts background information from a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlBackground</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlBackground cmdlet extracts the background (color or image) from a document according to the parameters Image or Color.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlBackground</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to retrieve background information from. Wildcards are allowed. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for the background image.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Image</maml:name>
				<maml:description>
					<maml:para>Specifies that the cmdlet result will be the FileInfo object (System.IO.FileInfo) of the file containing a copy of the background image. No object will be returned if there is no background image.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Color</maml:name>
				<maml:description>
					<maml:para>Specifies that the cmdlet result will be the System.Drawing.Color object containing the background color of the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to retrieve background information from. Wildcards are allowed. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for the background image.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Image</maml:name>
			<maml:description>
				<maml:para>Specifies that the cmdlet result will be the FileInfo object (System.IO.FileInfo) of the file containing a copy of the background image. No object will be returned if there is no background image.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Color</maml:name>
			<maml:description>
				<maml:para>Specifies that the cmdlet result will be the System.Drawing.Color object containing the background color of the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>FileInfo or Color</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If Image is specified, a file is created to hold the background image, if any, and a System.IO.FileInfo object is returned that refers to that file. If Color is specified, a System.Drawing.Color object is returned that contains the background color.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlBackground</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlPicture</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlComment</command:name>
		<maml:description>
			<maml:para>Extracts all the comments contained in a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlComment</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlComment extracts all the comments from a document, and return all of them in a XDocument</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlComment</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to retrieve comments from. Wildcards are allowed. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to retrieve comments from. Wildcards are allowed. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
      <maml:name>Document</maml:name>
      <maml:description>
        <maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
      <dev:type>
        <maml:name>OpenXmlPowerToolsDocument[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
  </command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Takes documents passed by pipe or specified by filename</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>XDocument containing all the comments</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OpenXmlComment Comments.docx</dev:code>
  			<dev:remarks>
				<maml:para>Outputs all the comments from the 'Comments.docx' document.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlCustomXmlData</command:name>
		<maml:description>
			<maml:para>Gets a customXml part from a document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlCustomXmlData</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlCustomXmlData cmdlet gets the first customXml part that matches the given name and returns it as an XDocument object.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlCustomXmlData</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to retrieve customXml information from. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Part</maml:name>
				<maml:description>
					<maml:para>Name of customXml part inside the Word Processing document package</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to retrieve customXml information from. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Part</maml:name>
			<maml:description>
				<maml:para>Name of customXml part inside the Word Processing document package</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlCustomXmlData</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlDigitalSignature</command:name>
		<maml:description>
			<maml:para>Gets information about digital signatures present in a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlDigitalSignature</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlDigitalSignature cmdlet returns a summary of digital signatures present in the Wordprocessing document</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlDigitalSignature</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) containing digital signatures. Wildcards are permitted.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) containing digital signatures. Wildcards are permitted.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OpenXmlDigitalSignature test.docx</dev:code>
  			<dev:remarks>
				<maml:para>Gets a summary of digital signatures for the test.docx document.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Signature: CN=fname1.lname1 (UntrustedRoot)
Signature: CN=fname2.lname2 (UntrustedRoot)
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDigitalSignature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-OpenXmlDigitalSignature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlDocument</command:name>
		<maml:description>
			<maml:para>Creates objects for OpenXML documents</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlDocument</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlDocument cmdlet pipes out an OpenXmlPowerToolsDocument for each document file.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlDocument</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the items to load into memory as Wordprocessing documents. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the items to load into memory as Wordprocessing documents. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$doc = Get-OpenXmlDocument file.docx</dev:code>
  			<dev:remarks>
				<maml:para>Stores into $doc a Wordprocessing document created from contents of file.docx.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlFooter</command:name>
		<maml:description>
			<maml:para>Retrieves footer information from Wordprocessing documents</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlFooter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlFooter cmdlet retrieves all the specified footer parts from a document and returns an XDocument array of those footers. An object is returned for the specified footer in each Section of the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlFooter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to retrieve footer information from. Wildcards are allowed. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>FooterType</maml:name>
				<maml:description>
					<maml:para>Specified which footers to retrieve from the document. Options are First, Even or Default. If even and odd page footers are used, Default will retrieve the odd page footers.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >FooterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Section</maml:name>
				<maml:description>
					<maml:para>Section number to use for retrieving footer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to retrieve footer information from. Wildcards are allowed. If you specify multiple paths use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>FooterType</maml:name>
			<maml:description>
				<maml:para>Specified which footers to retrieve from the document. Options are First, Even or Default. If even and odd page footers are used, Default will retrieve the odd page footers.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FooterType</command:parameterValue>
			<dev:type>
				<maml:name>FooterType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
      <maml:name>Section</maml:name>
      <maml:description>
        <maml:para>Selects the section that will be used to get the footer. The first section is 1 and is also the default.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlFooter</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlHeader</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlHeader</command:name>
		<maml:description>
			<maml:para>Retrieves header(s) information from Wordprocessing documents</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlHeader</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlHeader retrieves all the existing header parts from a document. The execution returns an XDocument array of all the header parts found in the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlHeader</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) to the items to retrieve header information from. Wildcards are allowed. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>HeaderType</maml:name>
				<maml:description>
					<maml:para>Specified which headers to retrieve from the document. Options are First, Even or Default. If even and odd page headers are used, Default will retrieve the odd page headers.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HeaderType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Section</maml:name>
				<maml:description>
					<maml:para>Section number to use for retrieving header.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the item(s) to the items to retrieve header information from. Wildcards are allowed. If you specify multiple paths use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>HeaderType</maml:name>
			<maml:description>
				<maml:para>Specified which headers to retrieve from the document. Options are First, Even or Default. If even and odd page headers are used, Default will retrieve the odd page headers.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HeaderType</command:parameterValue>
			<dev:type>
				<maml:name>HeaderType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
      <maml:name>Section</maml:name>
      <maml:description>
        <maml:para>Selects the section that will be used to get the header. The first section is 1 and is also the default.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Documents to retrieve header information from</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>Array of headers</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlHeader</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlFooter</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlStyle</command:name>
		<maml:description>
			<maml:para>Retrieves style definitions from a Wordprocessing or a Spreadsheet document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlStyle</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlStyle cmdlet retrieves the styles definition part from a Wordprocessing or Spreadsheet document and returns an XDocument object containing the styles content.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlStyle</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to retrieve style information from. Wildcards are allowed. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to retrieve style information from. Wildcards are allowed. If you specify multiple paths use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlStyle</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlTheme</command:name>
		<maml:description>
			<maml:para>Gets the theme content from a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlTheme</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlTheme cmdlet extracts the whole theme part from a Wordprocessing document as a thmx file (with media resources embedded). A Package object is returned as an OpenXmlPowerToolsDocument that corresponds to the theme file.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlTheme</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the items to retrieve theme information from. Wildcards are permitted. If you specify multiple paths, use commas  to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>Path of the created theme file.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Outputs the theme to the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the items to retrieve theme information from. Wildcards are permitted. If you specify multiple paths, use commas  to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputPath</maml:name>
			<maml:description>
				<maml:para>Path of the created theme file.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>PassThru</maml:name>
      <maml:description>
        <maml:para>Outputs the theme to the pipeline.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
  </command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlTheme</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-OpenXmlWatermark</command:name>
		<maml:description>
			<maml:para>Gets watermark text from a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OpenXmlWatermark</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-OpenXmlWatermark cmdlet retrieves the text of the document's watermark.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-OpenXmlWatermark</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to retrieve watermark information from. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be read by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to retrieve watermark information from. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OpenXmlWatermark test.docx</dev:code>
  			<dev:remarks>
				<maml:para>Gets the text from watermark in test.docx.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Confidential
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlWatermark</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Lock-OpenXmlDocument</command:name>
		<maml:description>
			<maml:para>Locks one or more Wordprocessing documents.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Lock</command:verb>
		<command:noun>OpenXmlDocument</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Lock-OpenXmlDocument cmdlet sets a lock inside one or more Wordprocessing documents to prevent them from being edited.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Lock-OpenXmlDocument</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to lock. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to lock. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Lock-OpenXmlDocument test1.docx,test2.docx</dev:code>
  			<dev:remarks>
				<maml:para>Sets a lock on test1.docx and test2.docx that prevents them from being modified.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Merge-OpenXmlDocument</command:name>
		<maml:description>
			<maml:para>Merge multiple source documents into a new document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Merge</command:verb>
		<command:noun>OpenXmlDocument</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Create a new document that merges the contents of multiple source documents. All or part of the source documents may be merged into the final document. There are three main ways that this cmdlet may be used. First, all of the documents specified by the Path parameter will be merged into the output document. Second, you can specify a single document with the Path parameter along with the Start and Count parameters to create a new document with part of the source document. Third, you can detail which parts you want from multiple source documents using the Sources parameter.

(There is a fourth way where you specify multiple documents with a single start and count for all of the documents. That combination is unlikely to be useful.)

There are some parts of a document that cannot be merged, like settings. These will all come from the first source document. You can specify a 0 Count for the first source document to get those settings without including any paragraphs.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Merge-OpenXmlDocument</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the documents to use as the source. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>Path and name of the file to create with the new content.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Start</maml:name>
				<maml:description>
					<maml:para>Specifies the first element to be used from the source document or documents. For many documents, the only elements are paragraphs, but some may contain tables and other types of elements, like range start or end elements.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Count</maml:name>
				<maml:description>
					<maml:para>Specifies the number of elements to use from the source document. For many documents, the only elements are paragraphs, but some may contain tables and other types of elements, like range start or end elements.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Sources</maml:name>
				<maml:description>
					<maml:para>This parameter is an array of one or more OpenXml.PowerTools.DocumentSource objects that define each source document and range of elements(paragraphs) that will be copied from that source document into the merged document. The DocumentSource object may specify an entire document or part of the document. One of the examples shows how to use these objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DocumentSource[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>KeepSections</maml:name>
				<maml:description>
					<maml:para>Use this parameter if you want the output document to contain section breaks between each source document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be used by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the documents to use as the source. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputPath</maml:name>
			<maml:description>
				<maml:para>Path and name of the file to create with the new content.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Start</maml:name>
			<maml:description>
				<maml:para>Specifies the first element to be used from the source document or documents. For many documents, the only elements are paragraphs, but some may contain tables and other types of elements, like range start or end elements.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Count</maml:name>
			<maml:description>
				<maml:para>Specifies the number of elements to use from the source document. For many documents, the only elements are paragraphs, but some may contain tables and other types of elements, like range start or end elements.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Sources</maml:name>
			<maml:description>
				<maml:para>This parameter is an array of one or more OpenXml.PowerTools.DocumentSource objects that define each source document and range of elements(paragraphs) that will be copied from that source document into the merged document. The DocumentSource object may specify an entire document or part of the document. One of the examples shows how to use these objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DocumentSource[]</command:parameterValue>
			<dev:type>
				<maml:name>DocumentSource[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeepSections</maml:name>
			<maml:description>
				<maml:para>Use this parameter if you want the output document to contain section breaks between each source document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be used by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Source documents to be included in the output document.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Merge-OpenXmlDocument -OutputPath merge.docx -Path input1.docx,input2.docx,input3.docx</dev:code>
  			<dev:remarks>
				<maml:para>Merges all three source documents into a single output document.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Merge-OpenXmlDocument -OutputPath extract.docx -Path input1.docx -Start 10 -Count 5</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new document containing five elements (paragraphs) from &quot;input1.docx&quot; starting at the 10th element.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$doc1 = New-Object -TypeName OpenXml.PowerTools.DocumentSource -ArgumentList &quot;Input1.docx&quot;
$doc1.KeepSection = 1
$doc2 = New-Object -TypeName OpenXml.PowerTools.DocumentSource -ArgumentList &quot;Input.docx&quot;, 3, 5
Merge-OpenXmlDocument -OutputPath merge.docx -Sources $doc1,$doc2</dev:code>
  			<dev:remarks>
				<maml:para>This example shows how to use the DocumentSource objects to specify exactly how to compose a new document from multiple source documents.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Split-OpenXmlDocument</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Merge-OpenXmlDocumentComment</command:name>
		<maml:description>
			<maml:para>Merge comments from multiple source documents into a new document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Merge</command:verb>
		<command:noun>OpenXmlDocumentComment</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>All source documents must be identical, except for the comments. The resulting merged document will contain all comments from the source documents.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Merge-OpenXmlDocumentComment</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) whose contents will be merged. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>Path and name of the file to create with the new document that has all comments in it.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) whose contents will be merged. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputPath</maml:name>
			<maml:description>
				<maml:para>Path and name of the file to create with the new document that has all comments in it.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Remove-OpenXmlComment</command:name>
		<maml:description>
			<maml:para>Removes comments from Wordprocessing documents.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>OpenXmlComment</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Remove-OpenXmlComment cmdlet locates and removes comment contents and references from Wordprocessing documents.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Remove-OpenXmlComment</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to remove comments from. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to remove comments from. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
      <maml:name>Document</maml:name>
      <maml:description>
        <maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
      <dev:type>
        <maml:name>OpenXmlPowerToolsDocument[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Edit-OpenXmlChange</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Remove-OpenXmlDigitalSignature</command:name>
		<maml:description>
			<maml:para>Removes the digital signature  of a Wordprocessing document</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>OpenXmlDigitalSignature</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Remove-OpenXmlDigitalSignature cmdlet removes digital signatures from a Wordprocessing document</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Remove-OpenXmlDigitalSignature</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to remove digital signature from. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to remove digital signature from. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
      <maml:name>Document</maml:name>
      <maml:description>
        <maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
      <dev:type>
        <maml:name>OpenXmlPowerToolsDocument[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-OpenXmlDigitalSignature SignedDocument.docx</dev:code>
  			<dev:remarks>
				<maml:para>Removes all the digital signatures from 'SignedDocument.docx'</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Add-OpenXmlDigitalSignature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlDigitalSignature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Remove-OpenXmlMarkup</command:name>
		<maml:description>
			<maml:para>Removes a variety of complex markups from a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>OpenXmlMarkup</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Each parameter indicates another kind of complex markup that should be removed from the document. Any number of the parameters may be processed at the same time.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Remove-OpenXmlMarkup</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AcceptRevisions</maml:name>
				<maml:description>
					<maml:para>Accepts all tracked revisions to the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveContentControls</maml:name>
				<maml:description>
					<maml:para>Removes content controls.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveSmartTags</maml:name>
				<maml:description>
					<maml:para>Removes Smart Tags.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveRsidInfo</maml:name>
				<maml:description>
					<maml:para>Removes RSID information.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveComments</maml:name>
				<maml:description>
					<maml:para>Removes all comments from the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveEndAndFootNotes</maml:name>
				<maml:description>
					<maml:para>Remove all endnote and footnote information.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReplaceTabsWithSpaces</maml:name>
				<maml:description>
					<maml:para>Change tabs into an appropriate number of spaces.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveFieldCodes</maml:name>
				<maml:description>
					<maml:para>Remove all field codes from the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemovePermissions</maml:name>
				<maml:description>
					<maml:para>Removes all permissions.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveProof</maml:name>
				<maml:description>
					<maml:para>Remove proofs.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveSoftHyphens</maml:name>
				<maml:description>
					<maml:para>Remove all soft hyphens from document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveLastRenderedPageBreak</maml:name>
				<maml:description>
					<maml:para>Removes the last rendered page break.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveBookmarks</maml:name>
				<maml:description>
					<maml:para>Remove all bookmarks from the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveWebHidden</maml:name>
				<maml:description>
					<maml:para>Remove hidden web information.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveGoBackBookmark</maml:name>
				<maml:description>
					<maml:para>Remove the Go Back bookmark from the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NormalizeXml</maml:name>
				<maml:description>
					<maml:para>Normalize XML in the document.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AcceptRevisions</maml:name>
			<maml:description>
				<maml:para>Accepts all tracked revisions to the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveContentControls</maml:name>
			<maml:description>
				<maml:para>Removes content controls.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveSmartTags</maml:name>
			<maml:description>
				<maml:para>Removes Smart Tags.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveRsidInfo</maml:name>
			<maml:description>
				<maml:para>Removes RSID information.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveComments</maml:name>
			<maml:description>
				<maml:para>Removes all comments from the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveEndAndFootNotes</maml:name>
			<maml:description>
				<maml:para>Remove all endnote and footnote information.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReplaceTabsWithSpaces</maml:name>
			<maml:description>
				<maml:para>Change tabs into an appropriate number of spaces.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveFieldCodes</maml:name>
			<maml:description>
				<maml:para>Remove all field codes from the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemovePermissions</maml:name>
			<maml:description>
				<maml:para>Removes all permissions.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveProof</maml:name>
			<maml:description>
				<maml:para>Remove proofs.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveSoftHyphens</maml:name>
			<maml:description>
				<maml:para>Remove all soft hyphens from document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveLastRenderedPageBreak</maml:name>
			<maml:description>
				<maml:para>Removes the last rendered page break.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveBookmarks</maml:name>
			<maml:description>
				<maml:para>Remove all bookmarks from the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveWebHidden</maml:name>
			<maml:description>
				<maml:para>Remove hidden web information.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveGoBackBookmark</maml:name>
			<maml:description>
				<maml:para>Remove the Go Back bookmark from the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NormalizeXml</maml:name>
			<maml:description>
				<maml:para>Normalize XML in the document.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Edit-OpenXmlChange</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Remove-OpenXmlPersonalInformation</command:name>
		<maml:description>
			<maml:para>Removes personal information from a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>OpenXmlPersonalInformation</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Remove-OpenXmlPersonalInformation cmdlet removes personal information from the settings of the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Remove-OpenXmlPersonalInformation</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to remove personal information from. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to remove personal information from. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
      <maml:name>Document</maml:name>
      <maml:description>
        <maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
      <dev:type>
        <maml:name>OpenXmlPowerToolsDocument[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-OpenXmlPersonalInformation -Path Test.docx</dev:code>
  			<dev:remarks>
				<maml:para>Removes the personal information from the &quot;Test.docx&quot; document.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Select-OpenXmlString</command:name>
		<maml:description>
			<maml:para>Identifies patterns in Wordprocessing documents.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Select</command:verb>
		<command:noun>OpenXmlString</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Searches Wordprocessing documents for matches of the specified pattern. By default, Select-OpenXmlString uses the Pattern parameter to match against elements in documents and/or the Style parameter to match against style names of paragraphs in the document. To learn more about regular expressions in Windows PowerShell, type get-help about_regular_expression. You can suppress the regular expression match by using the SimpleMatch parameter.

The cmdlet will search documents specified by the Path parameter that supports wildcards. Alternatively, a document or documents can be piped in, usually from the output of another PowerTools cmdlet.

Output from this cmdlet is a MatchInfo object that includes detailed information about the matches. The object includes properties like Filename and ElementNumber that can be used for other cmdlets like Merge-OpenXmlDocument. You can use the List parameter to stop after the first match in each input document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Select-OpenXmlString</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the documents to use as the source. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Pattern</maml:name>
				<maml:description>
					<maml:para>Specifies the string or regular expression that represents the matching criteria. To learn about regular expressions in Windows PowerShell, type get-help about_regular_expression at the Windows PowerShell command prompt.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Style</maml:name>
				<maml:description>
					<maml:para>Specifies the string or regular expression that represents the matching criteria for a style in the document. To learn about regular expressions in Windows PowerShell, type get-help about_regular_expression at the Windows PowerShell command prompt.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>simpleMatch</maml:name>
				<maml:description>
					<maml:para>Specifies that a simple match, rather than a regular expression match, should be used.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>caseSensitive</maml:name>
				<maml:description>
					<maml:para>Makes matches case sensitive. By default, matching is not case sensitive.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>list</maml:name>
				<maml:description>
					<maml:para>Specifies that only one match should result for each input document. The returned MatchInfo objects only include information about that first match.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be used by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the documents to use as the source. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Pattern</maml:name>
			<maml:description>
				<maml:para>Specifies the string or regular expression that represents the matching criteria. To learn about regular expressions in Windows PowerShell, type get-help about_regular_expression at the Windows PowerShell command prompt.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Style</maml:name>
			<maml:description>
				<maml:para>Specifies the string or regular expression that represents the matching criteria for a style in the document. To learn about regular expressions in Windows PowerShell, type get-help about_regular_expression at the Windows PowerShell command prompt.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>simpleMatch</maml:name>
			<maml:description>
				<maml:para>Specifies that a simple match, rather than a regular expression match, should be used.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>caseSensitive</maml:name>
			<maml:description>
				<maml:para>Makes matches case sensitive. By default, matching is not case sensitive.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>list</maml:name>
			<maml:description>
				<maml:para>Specifies that only one match should result for each input document. The returned MatchInfo objects only include information about that first match.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be used by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Source documents to be searched for matches.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerTools.MatchInfo</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>The MatchInfo object has the following properties:
Path: string
Filename: string
ElementNumber: integer
Content: string
Style: string
Pattern: string
IgnoreCase: boolean</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Merge-OpenXmlDocument</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlString</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlBackground</command:name>
		<maml:description>
			<maml:para>Sets the background color or image of a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlBackground</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlBackground cmdlet changes the background image or background color of a Wordprocessing document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlBackground</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>ImagePath</maml:name>
				<maml:description>
					<maml:para>Path of the image to set as the document background.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ColorName</maml:name>
				<maml:description>
					<maml:para>Hexadecimal representation of the color to set as the document background.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Color</maml:name>
				<maml:description>
					<maml:para>A System.Drawing.Color object that is used to set the background color. Usually this will come from the output of the Get-OpenXmlBackground cmdlet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Color</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ImageFile</maml:name>
				<maml:description>
					<maml:para>A System.IO.FileInfo object that refers to a file that is used to set the background image. Usually this will come from the output of the Get-OpenXmlBackground cmdlet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >FileInfo</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>ImagePath</maml:name>
			<maml:description>
				<maml:para>Path of the image to set as the document background.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ColorName</maml:name>
			<maml:description>
				<maml:para>Hexadecimal representation of the color to set as the document background.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Color</maml:name>
			<maml:description>
				<maml:para>A System.Drawing.Color object that is used to set the background color. Usually this will come from the output of the Get-OpenXmlBackground cmdlet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Color</command:parameterValue>
			<dev:type>
				<maml:name>Color</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>ImageFile</maml:name>
			<maml:description>
				<maml:para>A System.IO.FileInfo object that refers to a file that is used to set the background image. Usually this will come from the output of the Get-OpenXmlBackground cmdlet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
			<dev:type>
				<maml:name>FileInfo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Color, FileInfo or OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>See the Color, ImageFile and Document parameters for more information.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlBackground</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlContentFormat</command:name>
		<maml:description>
			<maml:para>Sets the format of a paragraph or run on a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlContentFormat</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlContentFormat cmdlet inserts markup containing format to be applied on a given run or paragraph. Format location is specified as an xpath query.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlContentFormat</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query to the paragraph or run in which to apply the format.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Content</maml:name>
				<maml:description>
					<maml:para>XML markup defining format to be applied. You are responsible for providing valid XML.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query to the paragraph or run in which to apply the format.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Content</maml:name>
			<maml:description>
				<maml:para>XML markup defining format to be applied. You are responsible for providing valid XML.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlContentStyle</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlContentStyle</command:name>
		<maml:description>
			<maml:para>Sets the style for a paragraph or run on a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlContentStyle</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlContentStyle cmdlet inserts inserts markup containing the style format to be applied on a given run or paragraph. Format location is specified as an XPath query.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlContentStyle</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>InsertionPoint</maml:name>
				<maml:description>
					<maml:para>XPath query to the paragraph or run in which to apply style.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>StyleName</maml:name>
				<maml:description>
					<maml:para>Name of the style to apply.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "5" >
				<maml:name>StylesSourcePath</maml:name>
				<maml:description>
					<maml:para>Path to the style library file. If the specified style does not exist in the style library of the document, the new style is copied into the document from this style library. See also StylesSource.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "6" >
				<maml:name>StylesSource</maml:name>
				<maml:description>
					<maml:para>XDocument object containing the style library. If the specified style does not exist in the style library of the document, the new style is copied into the document from this style library. See also StylesSourcePath. This object could be supplied by the Get-OpenXmlStyle cmdlet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >XDocument</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>InsertionPoint</maml:name>
			<maml:description>
				<maml:para>XPath query to the paragraph or run in which to apply style.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>StyleName</maml:name>
			<maml:description>
				<maml:para>Name of the style to apply.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="5">
			<maml:name>StylesSourcePath</maml:name>
			<maml:description>
				<maml:para>Path to the style library file. If the specified style does not exist in the style library of the document, the new style is copied into the document from this style library. See also StylesSource.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="6">
			<maml:name>StylesSource</maml:name>
			<maml:description>
				<maml:para>XDocument object containing the style library. If the specified style does not exist in the style library of the document, the new style is copied into the document from this style library. See also StylesSourcePath. This object could be supplied by the Get-OpenXmlStyle cmdlet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">XDocument</command:parameterValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlContentFormat</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlCustomXmlData</command:name>
		<maml:description>
			<maml:para>Sets the contents of a custom XML part in a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlCustomXmlData</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlCustomXmlData cmdlet sets or replaces the specified custom XML part in the document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlCustomXmlData</maml:name>
    <command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
    </command:parameter>
    <command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
    </command:parameter>
    <command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>PartPath</maml:name>
				<maml:description>
					<maml:para>Path of custom XML file used to set or replace custom XML data. Either this parameter or Part must are mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>PartName</maml:name>
				<maml:description>
					<maml:para>Name that will be used for the custom XML data part. If a PartPath is specified, the base file name will be also used at the PartName.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "5" >
				<maml:name>Part</maml:name>
				<maml:description>
					<maml:para>XDocument object containing the custom XML data. Either this parameter or PartPath are mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >XDocument</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>PartPath</maml:name>
			<maml:description>
				<maml:para>Path of custom XML file used to set or replace custom XML data. Either this parameter or Part must are mandatory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>PartName</maml:name>
			<maml:description>
				<maml:para>Name that will be used for the custom XML data part. If a PartPath is specified, the base file name will be also used at the PartName.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="5">
			<maml:name>Part</maml:name>
			<maml:description>
				<maml:para>XDocument object containing the custom XML data. Either this parameter or PartPath are mandatory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">XDocument</command:parameterValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>XDocument or OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>The XDocument object should contain the custom XML. See the Part parameter.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlCustomXmlData</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlFooter</command:name>
		<maml:description>
			<maml:para>Sets footers in a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlFooter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlFooter cmdlet inserts footer parts into all sections of a Wordprocessing document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlFooter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>FooterPath</maml:name>
				<maml:description>
					<maml:para>Paths of footer file to be set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>FooterType</maml:name>
				<maml:description>
					<maml:para>Specified which footers to set in the document. Options are First, Even or Default. If even and odd page footers are used, Default refers to the odd page footers.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >FooterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>Section</maml:name>
				<maml:description>
					<maml:para>Section number to use for setting footer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Footer</maml:name>
				<maml:description>
					<maml:para>XDocument containing the footer definition.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >XDocument</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>FooterPath</maml:name>
			<maml:description>
				<maml:para>Paths of footer file to be set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>FooterType</maml:name>
			<maml:description>
				<maml:para>Specified which footers to set in the document. Options are First, Even or Default. If even and odd page footers are used, Default refers to the odd page footers.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FooterType</command:parameterValue>
			<dev:type>
				<maml:name>FooterType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
      <maml:name>Section</maml:name>
      <maml:description>
        <maml:para>Selects the section that will be used to set the footer. The first section is 1 and is also the default.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Footer</maml:name>
			<maml:description>
				<maml:para>XDocument containing the footer definition.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">XDocument</command:parameterValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>XDocument or OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>See the Footer or Document parameters.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlFooter</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlHeader</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlHeader</command:name>
		<maml:description>
			<maml:para>Sets headers on a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlHeader</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlHeader cmdlet inserts header parts into all sections of a Wordprocessing document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlHeader</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>HeaderPath</maml:name>
				<maml:description>
					<maml:para>Paths of header files to be set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>HeaderType</maml:name>
				<maml:description>
					<maml:para>Specified which headers to set in the document. Options are First, Even or Default. If even and odd page headers are used, Default refers to the odd page headers.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HeaderType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>Section</maml:name>
				<maml:description>
					<maml:para>Section number to use for setting header.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Header</maml:name>
				<maml:description>
					<maml:para>XDocument containing the header definition.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >XDocument</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>HeaderPath</maml:name>
			<maml:description>
				<maml:para>Paths of header files to be set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>HeaderType</maml:name>
			<maml:description>
				<maml:para>Specified which headers to set in the document. Options are First, Even or Default. If even and odd page headers are used, Default refers to the odd page headers.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HeaderType</command:parameterValue>
			<dev:type>
				<maml:name>HeaderType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
      <maml:name>Section</maml:name>
      <maml:description>
        <maml:para>Selects the section that will be used to set the header. The first section is 1 and is also the default.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Header</maml:name>
			<maml:description>
				<maml:para>XDocument containing the header definition.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">XDocument</command:parameterValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>XDocument or OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>See the Header or Document parameters.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlHeader</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlFooter</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlSpreadSheetCellStyle</command:name>
		<maml:description>
			<maml:para>Applies a cell style to a cell or cell range in a worksheet</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlSpreadSheetCellStyle</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Applies a cell style to a cell or range of cells in a worksheet</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlSpreadSheetCellStyle</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the SpreadsheetML file(s) to modify</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>FromRow</maml:name>
				<maml:description>
					<maml:para>Cell row (same value as ToRow if you are affecting a single cell) or Cell Range initial row</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>ToRow</maml:name>
				<maml:description>
					<maml:para>Cell row (same value as FromRow if you are affecting a single cell) or Cell Range final row</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>FromColumn</maml:name>
				<maml:description>
					<maml:para>Cell column (same value as ToColumn if you are affecting a single cell) or Cell Range initial column</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>ToColumn</maml:name>
				<maml:description>
					<maml:para>Cell column (same value as FromColumn if you are affecting a single cell) or Cell Range final column</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "7" >
				<maml:name>CellStyle</maml:name>
				<maml:description>
					<maml:para>Name for cell style to apply to the cell or cell range</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "8" >
				<maml:name>WorksheetName</maml:name>
				<maml:description>
					<maml:para>Worksheet containing the cell or cell range to affect</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the SpreadsheetML file(s) to modify</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>FromRow</maml:name>
			<maml:description>
				<maml:para>Cell row (same value as ToRow if you are affecting a single cell) or Cell Range initial row</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>ToRow</maml:name>
			<maml:description>
				<maml:para>Cell row (same value as FromRow if you are affecting a single cell) or Cell Range final row</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>FromColumn</maml:name>
			<maml:description>
				<maml:para>Cell column (same value as ToColumn if you are affecting a single cell) or Cell Range initial column</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>ToColumn</maml:name>
			<maml:description>
				<maml:para>Cell column (same value as FromColumn if you are affecting a single cell) or Cell Range final column</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="7">
			<maml:name>CellStyle</maml:name>
			<maml:description>
				<maml:para>Name for cell style to apply to the cell or cell range</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="8">
			<maml:name>WorksheetName</maml:name>
			<maml:description>
				<maml:para>Worksheet containing the cell or cell range to affect</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlSpreadSheetCellValue</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlSpreadSheetColumnWidth</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlSpreadSheetCellValue</command:name>
		<maml:description>
			<maml:para>Set a value for a cell or a cell range in a worksheet</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlSpreadSheetCellValue</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Sets the values on a single cell or range of cells in a worksheet.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlSpreadSheetCellValue</maml:name>
    <command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the SpreadsheetML file(s) to modify</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
    </command:parameter>
    <command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
    </command:parameter>
    <command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>FromRow</maml:name>
				<maml:description>
					<maml:para>Cell row (same value as ToRow if you are affecting a single cell) or Cell Range initial row</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>ToRow</maml:name>
				<maml:description>
					<maml:para>Cell row (same value as FromRow if you are affecting a single cell) or Cell Range final row</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>FromColumn</maml:name>
				<maml:description>
					<maml:para>Cell column (same value as ToColumn if you are affecting a single cell) or Cell Range initial column</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>ToColumn</maml:name>
				<maml:description>
					<maml:para>Cell column (same value as FromColumn if you are affecting a single cell) or Cell Range final column</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "7" >
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Value to be set for the specified cell or cell range</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "8" >
				<maml:name>WorksheetName</maml:name>
				<maml:description>
					<maml:para>Worksheet containing the cell or cell range to affect</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the SpreadsheetML file(s) to modify</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>FromRow</maml:name>
			<maml:description>
				<maml:para>Cell row (same value as ToRow if you are affecting a single cell) or Cell Range initial row</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>ToRow</maml:name>
			<maml:description>
				<maml:para>Cell row (same value as FromRow if you are affecting a single cell) or Cell Range final row</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>FromColumn</maml:name>
			<maml:description>
				<maml:para>Cell column (same value as ToColumn if you are affecting a single cell) or Cell Range initial column</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>ToColumn</maml:name>
			<maml:description>
				<maml:para>Cell column (same value as FromColumn if you are affecting a single cell) or Cell Range final column</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="7">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Value to be set for the specified cell or cell range</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="8">
			<maml:name>WorksheetName</maml:name>
			<maml:description>
				<maml:para>Worksheet containing the cell or cell range to affect</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlSpreadSheetCellStyle</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlSpreadSheetColumnWidth</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlSpreadSheetColumnWidth</command:name>
		<maml:description>
			<maml:para>Sets the width for a column or column range in a worksheet</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlSpreadSheetColumnWidth</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Sets the width for a column or column range in a worksheet</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlSpreadSheetColumnWidth</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the SpreadsheetML file(s) to modify</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>FromColumn</maml:name>
				<maml:description>
					<maml:para>Cell column (same value as ToColumn if you are affecting a single column) or Range initial column</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>ToColumn</maml:name>
				<maml:description>
					<maml:para>Cell column (same value as FromColumn if you are affecting a single column) or Range final column</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int16</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>Width</maml:name>
				<maml:description>
					<maml:para>Width value to be set to column or column range</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>WorksheetName</maml:name>
				<maml:description>
					<maml:para>Worksheet containing the column or column range to affect</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the SpreadsheetML file(s) to modify</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>FromColumn</maml:name>
			<maml:description>
				<maml:para>Cell column (same value as ToColumn if you are affecting a single column) or Range initial column</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>ToColumn</maml:name>
			<maml:description>
				<maml:para>Cell column (same value as FromColumn if you are affecting a single column) or Range final column</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int16</command:parameterValue>
			<dev:type>
				<maml:name>Int16</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>Width</maml:name>
			<maml:description>
				<maml:para>Width value to be set to column or column range</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>WorksheetName</maml:name>
			<maml:description>
				<maml:para>Worksheet containing the column or column range to affect</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlSpreadSheetCellStyle</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OpenXmlSpreadSheetCellValue</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlString</command:name>
		<maml:description>
			<maml:para>Changes matching strings in a Wordprocessing document to a new value.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlString</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This is the equivalent of search and replace of all matching strings in a document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlString</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Pattern</maml:name>
				<maml:description>
					<maml:para>Specifies the string that represents the matching criteria.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Specifies the string that will be substituted wherever there is a match of the Pattern parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CaseSensitive</maml:name>
				<maml:description>
					<maml:para>Makes matches case sensitive. By default, matching is not case sensitive.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) whose contents will be modified. Wildcards are permitted. Do not use if documents are piped into this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Pattern</maml:name>
			<maml:description>
				<maml:para>Specifies the string that represents the matching criteria.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Specifies the string that will be substituted wherever there is a match of the Pattern parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
      <maml:name>Document</maml:name>
      <maml:description>
        <maml:para>Accepts OpenXML documents as input to the cmdlet. Use a variable that contains objects or pipe them from a cmdlet that returns documents.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
      <dev:type>
        <maml:name>OpenXmlPowerToolsDocument[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>PassThru</maml:name>
      <maml:description>
        <maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CaseSensitive</maml:name>
			<maml:description>
				<maml:para>Makes matches case sensitive. By default, matching is not case sensitive.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Select-OpenXmlString</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlStyle</command:name>
		<maml:description>
			<maml:para>Sets the style library for a Wordprocessing or a Spreadsheet document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlStyle</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlStyle cmdlet replaces the style library in a Wordprocessing or Spreadsheet document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlStyle</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "3" >
				<maml:name>StylePath</maml:name>
				<maml:description>
					<maml:para>Path of the styles library to use.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Style</maml:name>
				<maml:description>
					<maml:para>An XDocument object containing the style library to set on the document.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >XDocument</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="3">
			<maml:name>StylePath</maml:name>
			<maml:description>
				<maml:para>Path of the styles library to use.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Style</maml:name>
			<maml:description>
				<maml:para>An XDocument object containing the style library to set on the document.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">XDocument</command:parameterValue>
			<dev:type>
				<maml:name>XDocument</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>XDocument or OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>See Style or Document parameters.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlStyle</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlTheme</command:name>
		<maml:description>
			<maml:para>Sets a Wordprocessing document theme.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlTheme</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlTheme cmdlet sets the current theme in a Wordprocessing document to the specified theme.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlTheme</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>ThemePath</maml:name>
				<maml:description>
					<maml:para>Path of thmx file with theme contents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ThemePackage</maml:name>
				<maml:description>
					<maml:para>Package document (OpenXmlPowerToolsDocument) that contains the theme definition and associated files.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OpenXmlPowerToolsDocument</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>ThemePath</maml:name>
			<maml:description>
				<maml:para>Path of thmx file with theme contents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>ThemePackage</maml:name>
			<maml:description>
				<maml:para>Package document (OpenXmlPowerToolsDocument) that contains the theme definition and associated files.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OpenXmlPowerToolsDocument</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>See the ThemePackage or Document parameters.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlTheme</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Set-OpenXmlWatermark</command:name>
		<maml:description>
			<maml:para>Sets a watermark in a Wordprocessing document.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OpenXmlWatermark</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-OpenXmlWatermark cmdlet adds watermark text to the background of a document. If the DiagonalOrientation parameter is specified, then the text will be in a diagonal orientation rather than horizontal.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Set-OpenXmlWatermark</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>WatermarkText</maml:name>
				<maml:description>
					<maml:para>Text to display as the watermark.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiagonalOrientation</maml:name>
				<maml:description>
					<maml:para>Use this switch to display watermark with diagonal orientation. Horizontal orientation will be used otherwise.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
    <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
      <maml:name>Path</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the item(s) to be modified. Wildcards are permitted. If you specify multiple paths, use commas to separate the paths.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>OutputFolder</maml:name>
      <maml:description>
        <maml:para>Destination folder for modified documents. If this is not specified, the original document will be modified.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>WatermarkText</maml:name>
			<maml:description>
				<maml:para>Text to display as the watermark.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiagonalOrientation</maml:name>
			<maml:description>
				<maml:para>Use this switch to display watermark with diagonal orientation. Horizontal orientation will be used otherwise.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Document</maml:name>
			<maml:description>
				<maml:para>Specifies the item(s) from the pipeline that will be modified by this command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>String or OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>See WatermarkText or Document parameters.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-OpenXmlWatermark</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Split-OpenXmlDocument</command:name>
		<maml:description>
			<maml:para>Splits documents at section breaks.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Split</command:verb>
		<command:noun>OpenXmlDocument</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>A new document is created for each section of the original documents. The prefix name is used to generate file names for each document.</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Split-OpenXmlDocument</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item(s) to be split. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>OutputFolder</maml:name>
				<maml:description>
					<maml:para>Destination folder for created documents.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Prefix</maml:name>
				<maml:description>
					<maml:para>Specifies the prefix for the resulting split document files. A sequence number will be added to each file that is created.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue, ByPropertyName)" position = "named" >
				<maml:name>Document</maml:name>
				<maml:description>
					<maml:para>Specifies the item(s) from the pipeline that will be processed by this command.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OpenXmlPowerToolsDocument[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the item(s) to be split. Wildcards are permitted. If you specify multiple paths use commas to separate the paths.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OutputFolder</maml:name>
			<maml:description>
				<maml:para>Destination folder for created documents.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Prefix</maml:name>
			<maml:description>
				<maml:para>Specifies the prefix for the resulting split document files. A sequence number will be added to each file that is created.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
    <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
      <maml:name>Document</maml:name>
      <maml:description>
        <maml:para>Specifies the item(s) from the pipeline that will be processed by this command.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">OpenXmlPowerToolsDocument[]</command:parameterValue>
      <dev:type>
        <maml:name>OpenXmlPowerToolsDocument[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>PassThru</maml:name>
      <maml:description>
        <maml:para>Passes the object created by this cmdlet through the pipeline. By default, this cmdlet does not pass any objects through the pipeline.</maml:para>
      </maml:description>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Describes what files would be overwritten by this command, but does not overwrite the files.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before overwriting a file.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>OpenXmlPowerToolsDocument (if PassThru)</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Merge-OpenXmlDocument</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
</helpItems>
