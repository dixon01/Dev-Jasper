Running Irony unit tests.
Irony unit tests had been adjusted to run both Visual Studio test system and NUnit framework.
There are two test projects in the solution, one for each environment. They share all test definitions (*.cs files).
Adjustment in code is done through redefinition of test-related attributes for NUnit in each file in conditional compilation clause. 
NUnit project is set to "no-compile" in default (Debug) configuration - it references NUnit assemblies which 
might not be there if you don't use NUnit, but this won't prevent you from compiling the solution. 

VS Test project should be run directly in Visual Studio (version with Testing framework). Set the VsTest project  as startup and 
click Run - all tests will be executed.
  For VS 2012 - it can no longer run test projects directly; use Test Explorer window to run tests. 

For NUnit project, you must first add (refresh) reference to NUnit.Framework.dll. (You should download the package from NUnit site)
After refreshing the reference, compile the project. Then you need to update the startup app - running this project 
should automatically start NUnit GUI App. Right click on NUnit project in solution explorer, select properties; switch to Debug page, select "Start External Program" for Start action, and enter/lookup the path to the nunit.exe application (it is NUnit GUI). 
Run the project. Once the NUnit GUI appears, locate the Irony.Tests.NUnit.dll assembly in bin\debug folder, and then drag and drop it into the left pane of Nunit GUI. You will see the tree of tests expanded in the pane. Click Run button - the tests should run. 
(You have to do this drag-drop only once: next time you run NUnit it will load the assembly automatically)