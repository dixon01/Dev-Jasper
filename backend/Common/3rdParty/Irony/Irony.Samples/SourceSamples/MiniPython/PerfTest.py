# Used for perf measurements. Defines a simple function and makes 100 calls in a row.
# I ran 10K calls, total 1 million invocations, total time is around 250ms on my laptop (64bit 2.7GHz, Release mode, running .exe directly, no debugger);
# 0.4 microseconds per call. 

m = 5

def addm(x, y):
  x + y + m
  
x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

x = addm(1, 2)
x = addm(2, 3)
x = addm(3, 4)
x = addm(4, 5)
x = addm(5, 6)
x = addm(6, 7)
x = addm(7, 8)
x = addm(8, 9)
x = addm(9, 10)
x = addm(10, 11)

