<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema

    Version 1.3

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
      [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
      [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
      : System.Serialization.Formatters.Binary.BinaryFormatter
      : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
      : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
      : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
      : using a System.ComponentModel.TypeConverter
      : and then encoded with base64 encoding.
  -->
  
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DirectoryPolicyExclusionDesc" xml:space="preserve">
    <value>Allows exclusion based on the absolute or partial path to a file being checked in.</value>
  </data>
  <data name="DirectoryPolicyExclusionName" xml:space="preserve">
    <value>Directory path</value>
  </data>
  <data name="FilePolicyExclusionDesc" xml:space="preserve">
    <value>Allows exclusion based on the name of a file being checked in.</value>
  </data>
  <data name="FilePolicyExclusionName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="Filter_AllFiles" xml:space="preserve">
    <value>All Files (*.*)|*.*</value>
  </data>
  <data name="Filter_StyleCopSettings" xml:space="preserve">
    <value>StyleCop Settings ({0};{1})|{0};{1}|All Files (*.*)|*.*</value>
  </data>
  <data name="Message_ErrorOccurredWhileExportingSettings" xml:space="preserve">
    <value>An error occurred while exporting the StyleCop settings.&#10;&#13;&#10;&#13;Message: '{0}'</value>
  </data>
  <data name="Message_ErrorOccurredWhileImportingSettings" xml:space="preserve">
    <value>An error occurred while importing the StyleCop settings.&#10;&#13;&#10;&#13;Message: '{0}'</value>
  </data>
  <data name="Message_ImportExistingSettings" xml:space="preserve">
    <value>Do you want to import existing settings?</value>
  </data>
  <data name="Message_InternalErrorOccurred" xml:space="preserve">
    <value>An internal error occurred within the '{0}' policy.</value>
  </data>
  <data name="Message_InvalidWorkItemId" xml:space="preserve">
    <value>The work item id could not be parsed correctly, please check the value and try again.</value>
  </data>
  <data name="Message_NoAdditionalExclusionTypes" xml:space="preserve">
    <value>All available exclusion types have been added to the policy. Please edit an existing policy exclusion type.</value>
  </data>
  <data name="Message_NoChangeTypesWarning" xml:space="preserve">
    <value>You have not specified any change types that should be evaluated, which disables this policy. Do you wish to continue?</value>
  </data>
  <data name="Message_PolicyDescription" xml:space="preserve">
    <value>Requires any code files being checked in must pass the project code formatting guidelines.</value>
  </data>
  <data name="Message_PolicyType" xml:space="preserve">
    <value>StyleCop Policy</value>
  </data>
  <data name="Message_PolicyTypeDescription" xml:space="preserve">
    <value>This policy prevents check-ins that do not pass the StyleCop formatting guidelines.</value>
  </data>
  <data name="Message_SourceViolationsFound" xml:space="preserve">
    <value>One or more StyleCop violations have been found in '{0}'.</value>
  </data>
  <data name="Text_AddExclusion" xml:space="preserve">
    <value>Add Exclusion</value>
  </data>
  <data name="Text_ChooseOne" xml:space="preserve">
    <value>Choose one...</value>
  </data>
  <data name="Text_EditExclusion" xml:space="preserve">
    <value>Edit Exclusion</value>
  </data>
  <data name="Text_ExportStyleCopSettingsTitle" xml:space="preserve">
    <value>Export StyleCop Settings</value>
  </data>
  <data name="Text_ImportStyleCopSettingsTitle" xml:space="preserve">
    <value>Import StyleCop Settings</value>
  </data>
  <data name="Text_TaskCategoryError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Text_TaskCategoryMessage" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Text_TaskCategoryNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Text_TaskCategoryWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Warning" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Warning.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="WorkItemFieldExclusionDesc" xml:space="preserve">
    <value>Allows exclusion based on a field/value pair from an associated work item during the check-in.</value>
  </data>
  <data name="WorkItemFieldExclusionName" xml:space="preserve">
    <value>Work item field</value>
  </data>
  <data name="WorkItemFieldExclusionValueDesc" xml:space="preserve">
    <value>Field: {0}   Value: {1}</value>
  </data>
  <data name="WorkItemIdExclusionDesc" xml:space="preserve">
    <value>Allows exclusion based on work item ids selected during the check-in.</value>
  </data>
  <data name="WorkItemIdExclusionName" xml:space="preserve">
    <value>Work item identifier</value>
  </data>
</root>