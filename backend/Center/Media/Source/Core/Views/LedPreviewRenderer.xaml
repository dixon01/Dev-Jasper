<UserControl x:Class="Gorba.Center.Media.Core.Views.LedPreviewRenderer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Gorba.Center.Media.Core.ViewModels"
             xmlns:layout="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Layout"
             xmlns:converters="clr-namespace:Gorba.Center.Media.Core.Converters"
             xmlns:layoutElements="clr-namespace:Gorba.Center.Media.Core.Views.LayoutElements"
             xmlns:controls="clr-namespace:Gorba.Center.Media.Core.Views.Controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interaction="clr-namespace:Gorba.Center.Common.Wpf.Framework.Interaction;assembly=Gorba.Center.Common.Wpf.Framework"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Background="{StaticResource LayoutBackgroundColorBrush}"
             d:DataContext="{d:DesignInstance viewModels:LedPreviewRenderer}"
             x:Name="Renderer" >
    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:AlignmentConverter x:Key="AlignmentConverter"/>
        <converters:LedDotPositionConverter x:Key="LedDotPositionConverter" />
        <converters:LedDotLengthConverter x:Key="LedDotLengthConverter" />
    </UserControl.Resources>
    
    <Grid>
        <controls:LedGridDisplay x:Name="LedGridDisplay" LedRadius="{Binding LedDotRadius}"
                                 DistanceBetweenLed="{Binding LedDotSpace}"
                                 HorizontalAlignment="Left" VerticalAlignment="Top"
                                 ResolutionConfig="{Binding Parent.Parent.MediaApplicationState.CurrentVirtualDisplay}"/>
        <ItemsControl ItemsSource="{Binding Path=Elements, ElementName=Renderer, Mode=TwoWay}" Focusable="False">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Visibility" Value="{Binding Visible.Value, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Setter Property="Canvas.Left">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource LedDotPositionConverter}">
                                <Binding Path="X.Value" />
                                <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                <Binding Path="DataContext.LedDotSpace" ElementName="Renderer"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Canvas.Top">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource LedDotPositionConverter}">
                                <Binding Path="Y.Value" />
                                <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                <Binding Path="DataContext.LedDotSpace" ElementName="Renderer"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex.Value}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.Resources>
                <converters:IsInListConverter x:Key="IsInListConverter" />
                <Style x:Key="LayoutElementWithAdorners">
                    <Setter Property="layoutElements:EditableLayoutElementBase.ShowAdorner">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource IsInListConverter}">
                                <Binding Path="Parent.SelectedElements" Mode="TwoWay" />
                                <Binding />
                                <Binding Path="Parent.SelectedElements.Count" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
                <DataTemplate DataType="{x:Type layout:StaticTextElementDataViewModel}">
                    <layoutElements:LedStaticTextLayoutElement>
                        <layoutElements:LedStaticTextLayoutElement.Style>
                            <Style BasedOn="{StaticResource LayoutElementWithAdorners}" TargetType="layoutElements:LedStaticTextLayoutElement">
                                <Setter Property="Width">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Width.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Height">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Height.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </layoutElements:LedStaticTextLayoutElement.Style>
                    </layoutElements:LedStaticTextLayoutElement>
                </DataTemplate>
                <DataTemplate DataType="{x:Type layout:DynamicTextElementDataViewModel}">
                    <layoutElements:LedDynamicTextLayoutElement>
                        <layoutElements:LedDynamicTextLayoutElement.Style>
                            <Style BasedOn="{StaticResource LayoutElementWithAdorners}" TargetType="layoutElements:LedDynamicTextLayoutElement">
                                <Setter Property="Width">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Width.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Height">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Height.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </layoutElements:LedDynamicTextLayoutElement.Style>
                    </layoutElements:LedDynamicTextLayoutElement>
                </DataTemplate>
                <DataTemplate DataType="{x:Type layout:ImageElementDataViewModel}">
                    <layoutElements:LedImageLayoutElement>
                        <layoutElements:LedImageLayoutElement.Style>
                            <Style BasedOn="{StaticResource LayoutElementWithAdorners}" TargetType="layoutElements:LedImageLayoutElement">
                                <Setter Property="Width">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Width.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Height">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Height.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </layoutElements:LedImageLayoutElement.Style>
                    </layoutElements:LedImageLayoutElement>
                </DataTemplate>
                <DataTemplate DataType="{x:Type layout:RectangleElementDataViewModel}">
                    <layoutElements:LedRectangleLayoutElement>
                        <layoutElements:LedRectangleLayoutElement.Style>
                            <Style BasedOn="{StaticResource LayoutElementWithAdorners}" TargetType="layoutElements:LedRectangleLayoutElement">
                                <Setter Property="Width">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Width.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Height">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource LedDotLengthConverter}" Mode="TwoWay">
                                            <Binding Path="Height.Value" />
                                            <Binding Path="DataContext.LedDotRadius" ElementName="Renderer" />
                                            <Binding Path="DataContext.LedDotSpace" ElementName="Renderer" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </layoutElements:LedRectangleLayoutElement.Style>
                    </layoutElements:LedRectangleLayoutElement>
                </DataTemplate>
            </ItemsControl.Resources>
        </ItemsControl>
        <i:Interaction.Triggers>
            <interaction:InteractionRequestTrigger SourceObject="{Binding ElementName=Renderer, Path=RefreshLedDisplayRequest}">
                <i:InvokeCommandAction Command="{Binding ElementName=Renderer, Path=UpdateLedDisplayCommand}"/>
            </interaction:InteractionRequestTrigger>
        </i:Interaction.Triggers>
    </Grid>
</UserControl>
