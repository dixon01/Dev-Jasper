<interaction:InteractionDialogBase x:Class="Gorba.Center.Media.Core.Views.Interaction.SelectMediaPopup"
                                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                   xmlns:interaction="clr-namespace:Gorba.Center.Common.Wpf.Framework.Interaction;assembly=Gorba.Center.Common.Wpf.Framework"
                                   xmlns:resources="clr-namespace:Gorba.Center.Media.Core.Resources"
                                   xmlns:interaction1="clr-namespace:Gorba.Center.Media.Core.Interaction"
                                   xmlns:converters="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Converters"
                                   xmlns:converters1="clr-namespace:Gorba.Center.Media.Core.Converters"
                                   xmlns:project="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Project"
                                   xmlns:system="clr-namespace:System;assembly=mscorlib"
                                   xmlns:layout="clr-namespace:Gorba.Center.Media.Core.DataViewModels"
                                   xmlns:layout2="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Layout"
                                   xmlns:converters2="clr-namespace:Gorba.Center.Common.Wpf.Framework.Converters;assembly=Gorba.Center.Common.Wpf.Framework"
                                   xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                                   xmlns:propertyGrid="clr-namespace:Gorba.Center.Common.Wpf.Views.Components.PropertyGrid;assembly=Gorba.Center.Common.Wpf.Views"
                                   mc:Ignorable="d" Name="SelectMediaPopupRoot" Background="White"
                                   Width="360" MaxHeight="412"  d:DataContext="{d:DesignInstance interaction1:SelectMediaPrompt}"
                                   Cursor="Arrow">
    <interaction:InteractionDialogBase.Resources>
        <converters:EditPopupMarginConverter x:Key="EditPopupMarginConverter"/>
        <converters2:ToTypeConverter x:Key="ToTypeConverter"/>
        <converters2:IsNullOrWhiteSpaceConverter x:Key="IsNullOrWhiteSpaceConverter"/>
        <converters1:HasFormulaConverter x:Key="HasFormulaConverter" />
        <converters1:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <system:Double x:Key="MediaItemHeight">60</system:Double>

        <Style TargetType="Separator">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="1"/>
        </Style>
    </interaction:InteractionDialogBase.Resources>

    <interaction:InteractionDialogBase.Margin>
        <MultiBinding Converter="{StaticResource EditPopupMarginConverter}" ConverterParameter="12">
            <Binding Path="PlacementTarget.X.Value"/>
            <Binding Path="PlacementTarget.Y.Value"/>
            <Binding Path="PlacementTarget.Width.Value"/>
            <Binding Path="PlacementTarget.Height.Value"/>
            <Binding Path="Shell.Zoom"/>
            <Binding Path="Shell.LayoutPosition"/>
            <Binding ElementName="SelectMediaPopupRoot" Path="Tag"/>
            <Binding Path="Shell.MediaApplicationState.CurrentPhysicalScreen.Width.Value"/>
            <Binding Path="Shell.MediaApplicationState.CurrentPhysicalScreen.Height.Value"/>
            <Binding ElementName="SelectMediaPopupRoot" Path="ActualWidth"/>
            <Binding ElementName="SelectMediaPopupRoot" Path="ActualHeight"/>
            <Binding Path="PlacementTarget.UseMousePosition.Value"/>
            <Binding Path="IsLedCanvas" ElementName="SelectMediaPopupRoot"/>
            <Binding Path="PlacementTarget"/>
        </MultiBinding>
    </interaction:InteractionDialogBase.Margin>

    <Border BorderBrush="{StaticResource ResourceManagerMediaBorderColorBrush}" BorderThickness="1" Padding="5">
        <Grid x:Name="MainGrid">
            <Grid.Resources>
                <converters1:FilepathToImageConverter x:Key="FilepathToImageConverter"/>
                <converters1:ResourceInfoToMediaElementConverter x:Key="ResourceInfoToMediaElementConverter"/>
                <converters1:FilenameConverter x:Key="FilenameConverter"/>
                <system:Boolean x:Key="True">True</system:Boolean>
                <CollectionViewSource x:Key="RecentMedia" Filter="FilterMediaCollection" >
                    <CollectionViewSource.SortDescriptions>
                        <componentModel:SortDescription PropertyName="Type"/>
                    </CollectionViewSource.SortDescriptions>
                </CollectionViewSource>

                <CollectionViewSource x:Key="Media" Filter="FilterMediaCollection">
                    <CollectionViewSource.SortDescriptions>
                        <componentModel:SortDescription PropertyName="Type"/>
                    </CollectionViewSource.SortDescriptions>
                </CollectionViewSource>

                <DataTemplate x:Key="ResourceInfoDataTemplate2" DataType="project:ResourceInfoDataViewModel">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Image Grid.Column="0" Grid.RowSpan="2"
                               Margin="3"
                               Source="{Binding Converter={StaticResource ResourceInfoToMediaElementConverter}, ConverterParameter={StaticResource True}}"
                               MouseEnter="OnMouseEnterPreview" Tag="{Binding Name, RelativeSource={RelativeSource AncestorType=ListView}}"/>

                        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" 
                                       Width="1" HorizontalAlignment="Left" Margin="3 3 0 3" VerticalAlignment="Stretch"
                                       Fill="{StaticResource ResourceManagerSeparatorBackgroundColorBrush}"/>

                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=Filename, Converter={StaticResource FilenameConverter}}"
                                       FontWeight="Bold" Margin="10 15 0 0"/>

                        <!-- Metadata -->
                        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
                            <TextBlock Text="{Binding Path=Dimension}" Margin="10,0,10,0" />
                            <TextBlock Text="{Binding Path=Duration}"/>
                        </StackPanel>

                    </Grid>
                </DataTemplate>

                <Style x:Key="ResourceInfoContainerStyle2" TargetType="{x:Type ListViewItem}">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Height" Value="{StaticResource MediaItemHeight}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Background="{TemplateBinding Background}" Margin="2 0 0 0" BorderThickness="0 0 0 1"
                                            BorderBrush="{StaticResource ResourceManagerMediaBorderColorBrush}">
                                    <ContentPresenter Margin="5 0 5 0"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="{StaticResource ResourceManagerHoveredMediaBackgroundColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="{StaticResource ResourceManagerSelectedMediaBackgroundColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style TargetType="RowDefinition">
                            <Setter Property="RowDefinition.MinHeight" Value="120"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Count, Source={StaticResource RecentMedia}}" Value="0">
                                    <Setter Property="RowDefinition.MinHeight" Value="0"/>
                                    <Setter Property="RowDefinition.Height" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="{x:Static resources:MediaStrings.EditDynamicTextPopup_RecentlyUsed}"
                           Foreground="{StaticResource EditDynamicTextPopupColorBrush}"
                           VerticalAlignment="Center"
                           Margin="5 5 0 5" FontWeight="Bold" />
                <Separator Grid.Row="1" Margin="0 0 0 0"/>

                <Border Grid.Row="2" BorderThickness="0" BorderBrush="{StaticResource EditDynamicTextPopupSeparatorColorBrush}"
                            Margin="0" Padding="0 0 0 0" >
                    <ListView Name="RecentValuesList"  BorderThickness="0" ItemsSource="{Binding Source={StaticResource ResourceKey=RecentMedia}}"
                        SelectionChanged="OnRecentSelectionChanged" MouseDoubleClick="OnMouseDoubleClick"  ItemTemplate="{StaticResource ResourceInfoDataTemplate2}"
                        ItemContainerStyle="{StaticResource ResourceInfoContainerStyle2}"
                        ScrollViewer.CanContentScroll="False">
                        <!--<ListView.ItemTemplate>
                        <DataTemplate DataType="project:ResourceInfoDataViewModel">
                            <Grid Margin="0,0,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100" />
                                   <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Source="{Binding Converter={StaticResource ResourceInfoToMediaElementConverter}, ConverterParameter={StaticResource True}}"
                                       Grid.Column="0" Width="50" MouseEnter="OnMouseEnterPreview"/>
                                <TextBlock Text="{Binding Filename, Converter={StaticResource FilenameConverter}}"
                                           Grid.Column="1" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>-->
                        <!--<ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="BorderThickness" Value="0" />
                            </Style>
                        </ListView.ItemContainerStyle>-->
                    </ListView>

                </Border>
                <Separator Grid.Row="3"/>

            </Grid>
            <!--Header="{x:Static resources:MediaStrings.SelectMediaPopup_ExpanderHeader}"-->
            <Expander Style="{StaticResource FlatStyleExpander}" Grid.Row="1" MaxHeight="245" 
                IsExpanded="True" Name="MediaSelectionExpander"
                VerticalAlignment="Center"
                Margin="0 6 0 0" FontWeight="Bold" Padding="0 0 0 0">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Foreground="{StaticResource EditDynamicTextPopupColorBrush}" 
                                   Text="{x:Static resources:MediaStrings.SelectMediaPopup_ExpanderHeader}"
                                   VerticalAlignment="Center"
                                   Margin="0 0 5 0"/>

                        <propertyGrid:SearchBox Grid.Column="1" x:Name="MediaSearchBox"
                                                Margin="0 0 20 0"
                                                MinWidth="200" HorizontalAlignment="Right"
                                                Searched="SearchBoxOnSearched" 
                                                ClearSearch="SearchBoxClearSearch"
                                                ToolTip="{x:Static resources:MediaStrings.SelectMediaPopup_Search}"
                                                Visibility="{Binding ElementName=MediaSelectionExpander, Path=IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </Grid>
                </Expander.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Separator Grid.Row="0" Margin="0 6 0 0"/>
                    <ListView Grid.Row="1" Name="MediaList" ItemsSource="{Binding Source={StaticResource ResourceKey=Media}}"
                      SelectedItem="{Binding SelectedResource, Mode=TwoWay}" MouseDoubleClick="OnMouseDoubleClick"
                      ItemTemplate="{StaticResource ResourceInfoDataTemplate2}"
                      ItemContainerStyle="{StaticResource ResourceInfoContainerStyle2}"
                      ScrollViewer.CanContentScroll="False"
                      BorderThickness="0">
                            <!--<ListView.View>
                        <GridView>
                            <GridViewColumn Header="{x:Static resources:MediaStrings.ResourceManagerView_PreviewColumnHeader}" 
                                            Width="100">
                                <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="project:ResourceInfoDataViewModel">
                                            <Image Width="50"
                                               Source="{Binding Filename, Converter={StaticResource FilepathToImageConverter}}"
                                               MouseEnter="OnMouseEnterPreview" MouseLeave="OnMouseLeavePreview" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                                <GridViewColumn DisplayMemberBinding="{Binding Path=Filename, Converter={StaticResource FilenameConverter}}" 
                                            Header="{x:Static resources:MediaStrings.ResourceManagerView_NameColumnHeader}" 
                                            Width="100"/>
                                <GridViewColumn >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <controls:ImageButton 
                                                Width="16"
                                                Height="16"
                                                Icon="/Gorba.Center.Media.Core;component/Resources/Images/Icons/delete_dark_16x16.png"
                                                Click="OnDeleteButtonClicked"
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=SelectedItem}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>-->
                    </ListView>
                    <Border  Grid.Row="2" BorderBrush="{x:Null}" Height="{StaticResource MediaItemHeight}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Items.Count , ElementName=MediaList}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <TextBlock Text="{x:Static resources:MediaStrings.SelectMediaNoMediaMessage}"
                                   Foreground="{StaticResource EditDynamicTextPopupColorBrush}"
                                   VerticalAlignment="Center"
                                   Margin="3 0 0 0"
                                   FontWeight="Bold"/>
                    </Border>
                    <Separator Grid.Row="3"/>
                </Grid>
            </Expander>
            <Grid Grid.Row="2" Margin="0 3 0 3">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, ElementName=MediaSelectionExpander}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Button Grid.Row="0" BorderThickness="0" Click="OnAddButtonClicked"
                            Style="{StaticResource FlatButton}" HorizontalContentAlignment="Stretch">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Static resources:MediaStrings.SelectMediaPopup_Add}"
                                       Margin="5 3 15 0" Grid.Column="0"/>
                        <Border Grid.Column="1" Background="{StaticResource LayoutNavigationAddButtonBackgroundColorBrush}"
                                    Width="20" Height="20">
                            <Image Width="10" Height="10"
                                       Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/add_light_10x10.png" />
                        </Border>

                    </Grid>
                </Button>
            </Grid>
            <Canvas Grid.Row="0" Grid.RowSpan="2" Name="PopupContainer">
                <Border BorderThickness="0" BorderBrush="{x:Null}" 
                        Canvas.Right="0" Canvas.Top="0">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MediaElement, Converter={StaticResource ToTypeConverter}}" 
                                             Value="{x:Type layout2:ImageElementDataViewModel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MediaElement, Converter={StaticResource ToTypeConverter}}" 
                                             Value="{x:Type layout2:VideoElementDataViewModel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding MediaElement, Converter={StaticResource ToTypeConverter}}" Value="{x:Type layout2:ImageElementDataViewModel}"/>
                                        <Condition Binding="{Binding MediaElement.Image}" Value="{x:Null}"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding IsLedCanvas, ElementName=SelectMediaPopupRoot }"  Value="true">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding MediaElement, Converter={StaticResource ToTypeConverter}}" Value="{x:Type layout2:VideoElementDataViewModel}"/>
                                        <Condition Binding="{Binding MediaElement.VideoUri.Value, Converter={StaticResource IsNullOrWhiteSpaceConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding MediaElement, Converter={StaticResource ToTypeConverter}}" Value="{x:Type layout2:VideoElementDataViewModel}"/>
                                        <Condition Binding="{Binding MediaElement.VideoUri.Formula, Converter={StaticResource HasFormulaConverter}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Button Style="{StaticResource FlatIconButton}"  Click="OnFitToOrignalSizeButtonClicked"
                            ToolTip="{x:Static resources:MediaStrings.FitToOriginalSizeTooltip}">
                        <Image Width="16" Height="16"
                               Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/imagefit_dark_16x16.png" />
                    </Button>
                </Border>

            </Canvas>
        </Grid>

    </Border>
</interaction:InteractionDialogBase>
