<layoutElements:EditableLayoutElementBase x:Class="Gorba.Center.Media.Core.Views.LayoutElements.PictureLayoutElement"
                                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                 xmlns:views="clr-namespace:Gorba.Center.Media.Core.Views"
                                 xmlns:converters="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Converters"
                                 xmlns:layout="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Layout"
                                 xmlns:layout1="clr-namespace:Gorba.Common.Configuration.Infomedia.Layout;assembly=Gorba.Common.Configuration.Infomedia"
                                 xmlns:layoutElements="clr-namespace:Gorba.Center.Media.Core.Views.LayoutElements"
                                 xmlns:converters1="clr-namespace:Gorba.Center.Media.Core.Converters"
                                 mc:Ignorable="d" 
                                 d:DesignHeight="300" d:DesignWidth="300" x:Name="Root"
				 d:DataContext="{d:DesignInstance layout:ImageElementDataViewModel}">
    <layoutElements:EditableLayoutElementBase.Resources>
        <converters:ResourceFilenameToImageConverter x:Key="ImageElementDataViewModelToImageConverter"/>
        <converters1:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
    </layoutElements:EditableLayoutElementBase.Resources>
    <Border BorderThickness="1">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="{StaticResource LayoutElementAdorneredBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource LayoutElementBorder}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ShowAdorner, ElementName=Root}" Value="True">
                        <Setter Property="Background" Value="{StaticResource LayoutElementAdorneredSelectedBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource LayoutElementSelectedBorder}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        
        <Grid>
            <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/image_44x44.png" 
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Width="44" Height="44" 
                   Visibility="{Binding Path=Filename.Value, Converter={StaticResource StringToVisibilityConverter}}"/>
            <Image Source="{Binding Converter={StaticResource ResourceKey=ImageElementDataViewModelToImageConverter}, Path=Filename.Value}">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                        <Setter Property="Stretch" Value="Fill"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Scaling.Value}" Value="{x:Static layout1:ElementScaling.Stretch}">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="Stretch" Value="Fill"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Scaling.Value}" Value="{x:Static layout1:ElementScaling.Scale}">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="Stretch" Value="Uniform"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Scaling.Value}" Value="{x:Static layout1:ElementScaling.Fixed}">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Stretch" Value="None"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
    </Border>
</layoutElements:EditableLayoutElementBase>
