<UserControl x:Class="Gorba.Center.Media.Core.Views.Controls.FormulaEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:resources="clr-namespace:Gorba.Center.Media.Core.Resources"
             xmlns:interaction="clr-namespace:Gorba.Center.Media.Core.Interaction"
             xmlns:eval="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Eval"
             xmlns:converters="clr-namespace:Gorba.Center.Media.Core.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:presentation="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Presentation"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             mc:Ignorable="d" 
             Name="Root"
             d:DesignHeight="380" d:DesignWidth="300" Padding="3" d:DataContext="{d:DesignInstance interaction:FormulaEditorPrompt}">
    <UserControl.Resources>
        <converters:HelpTextConverter x:Key="HelpTextConverter" Prefix="FormulaEditor_Help_" />
        <converters:HelpLinkConverter x:Key="HelpLinkConverter" Prefix="http://gorba.com/help/icenter.media/" />
        <converters:EvaluationPropertyListConverter x:Key="EvaluationPropertyListConverter" Prefix="FormulaEditor_PropertyLabel_" />
        <converters:IsListConverter x:Key="IsListConverter" />
        <converters:IsDateEvalConverter x:Key="IsDateEvalConverter" />
        <converters:IsTimeEvalConverter x:Key="IsTimeEvalConverter" />
        <converters:EvaluationToStringConverter x:Key="EvaluationToStringConverter" />
        <converters:ListAndItemAggregationConverter x:Key="ListAndItemAggregationConverter" />
        <converters:IsTypeOfConverter x:Key="IsTypeOfConverter" />
        <converters:TimeSpanToDateTimeConverter x:Key="TimeSpanToDateTimeConverter" />
        <converters:NotNullConverter x:Key="NotNullConverter" />
        <converters:IsCsvMappingEvalFileNameConverter x:Key="IsCsvMappingEvalFileNameConverter" />
        <Style TargetType="TextBox" x:Key="TextBoxWithValidation" BasedOn="{StaticResource MediaTextBoxStyle}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                    
                </Trigger>
                <Trigger Property="IsVisible" Value="True">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderBrush="Red" BorderThickness="1">
                                    <AdornedElementPlaceholder />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <TabControl Style="{StaticResource TopFullWidthTabControl}" SelectionChanged="OnTabItemSelectionChanged">
        <TabItem Header="{x:Static resources:MediaStrings.FormulaEditor_SimpleTab}" Name="SimpleTabItem">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Margin="10 0 0 0" Padding="0 5 0 0"
                               VerticalAlignment="Center"
                               MinHeight="30"
                               FontWeight="Bold" Text="{x:Static resources:MediaStrings.FormulaEditor_ResultPreview}"  
                               Foreground="{StaticResource FormulaEditorFormulaPreviewForegroundColorBrush}"/>

                    <TextBlock Grid.Column="1" VerticalAlignment="Center"
                               MinHeight="30"
                               Padding="0 5 0 0"
                               Name="ResultTextBlock"
                               HorizontalAlignment="Stretch"
                               TextWrapping="Wrap" TextTrimming="None"
                               FontWeight="Bold"
                               Foreground="{StaticResource FormulaEditorFormulaPreviewForegroundColorBrush}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding DataValue.Formula, Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=false, Mode=TwoWay}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedPredefinedFormula, Converter={StaticResource NotNullConverter}}" Value="True">
                                        <Setter Property="Text" Value="{Binding SelectedPredefinedFormula.Evaluation, Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=false}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Margin="10 0 0 0" VerticalAlignment="Center"
                               Text="{x:Static resources:MediaStrings.FormulaEditor_Formula}"/>

                    <ComboBox Grid.Column="1" Margin="0 3 0 3" Name="FormulaComboBox"
                              IsEditable="True"
                              DisplayMemberPath="Name" 
                              SelectedValuePath="EvaluationType"
                              MaxDropDownHeight="{Binding ElementName=Root, Path=MaxFormulaDropDownHeight}"
                              ItemsSource="{Binding ElementName=Root, Path=FormulaTypeList}" 
                              SelectionChanged="OnEvaluationTypeSelected">

                        <ComboBox.Resources>
                            <Style TargetType="TextBox" BasedOn="{StaticResource MediaTextBoxStyle}">
                                <Setter Property="BorderThickness" Value="0"/>
                            </Style>
                        </ComboBox.Resources>
                        
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource FlatStyleCombobox}">
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource FlatStyleComboboxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}" >
                                                        <Border x:Name="Item" Focusable="False" Background="{StaticResource ComboboxPupupBackgroundColorBrush}">
                                                            <ContentPresenter x:Name="ContentPresenter" Margin="3" VerticalAlignment="Center" />
                                                        </Border>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger SourceName="Item" Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Item" Property="Background" Value="{StaticResource ComboboxPupupMouseOverBackgroundColorBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="Item" Property="Background" Value="{StaticResource ComboboxPupupSelectedBackgroundColorBrush}" />
                                                            </Trigger>
                                                            <DataTrigger Binding="{Binding Evaluation, Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type presentation:EvaluationConfigDataViewModel}}" Value="True">
                                                                <Setter TargetName="ContentPresenter" Property="TextBlock.FontStyle" Value="Italic" />
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </Grid>

                <Border Grid.Row="2" Background="{StaticResource FormulaEditorEditBoxBackgroundColorBrush}"
                        Padding="6 6 6 6">
                    <Grid Name="FormulaGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto" Name="LastRowDefinition" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <!-- Following datatemplates are needed because of a bug
                                in .NET 4.0 WPF: http://support.microsoft.com/kb/2464222 -->
                            <DataTemplate x:Key="NormalItemContentTemplate">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Header" />
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Text="{Binding Name}" Margin="0 0 5 0"/>

                                    <TextBox Grid.Column="1" Style="{StaticResource TextBoxWithValidation}" LostFocus="OnArgumentTextBoxKeyUp" KeyUp="OnArgumentTextBoxKeyUp" Text="{Binding Path=Evaluation.Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                                    <Button Grid.Column="2" Command="{Binding ElementName=Root, Path=DictionarySelectorCommand}" CommandParameter="{Binding Evaluation}" >
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource FlatHighlightButton}">
                                                <Setter Property="Visibility" Value="Hidden"></Setter>
                                                <Setter Property="ToolTip" Value="{x:Static resources:MediaStrings.FormulaEditor_DictionarySelectorButtonTooltip}" />
                                                <Style.Triggers>
                                                    
                                                    <DataTrigger Binding="{Binding Evaluation.IsEvalDataViewModelBase}" Value="true">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/triangle_right_light_8x8.png" Width="8" Height="8" />
                                    </Button>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="BoolItemDataTemplate">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Header" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Name}" Margin="0 0 5 0" VerticalAlignment="Center"/>
                                    <CheckBox Style="{StaticResource FlatStyleCheckbox}" IsChecked="{Binding Evaluation.Value}" Grid.Column="1" VerticalAlignment="Center" Click="OnCheckBoxClicked" />
                                </Grid>
                                
                            </DataTemplate>

                            <DataTemplate x:Key="DateItemContentTemplate" DataType="{x:Type eval:DateEvalDataViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Header" />
                                        <ColumnDefinition/>
                                        <!--<ColumnDefinition Width="20"/>-->
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Text="{Binding Name}" Margin="0 0 5 0" VerticalAlignment="Center"/>

                                    <telerik:RadDateTimePicker
                                        Grid.Column="1" InputMode="DatePicker"
                                        HorizontalAlignment="Left"
                                        Margin="5 0 0 0"
                                        Width="120"
                                        x:Name="DatePicker"
                                        SelectedValue="{Binding Evaluation.Value, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                        SelectionChanged="OnDateTimeSelectionChanged">
                                    </telerik:RadDateTimePicker>
                                </Grid>
                            </DataTemplate>
                            
                            <DataTemplate x:Key="CsvMappingFileNameTemplate">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Header" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{x:Static resources:MediaStrings.FormulaEditor_CsvMappingSelectionLabel}" Margin="0 0 5 0" VerticalAlignment="Center" />
                                    <ComboBox Grid.Column="1" 
                                              x:Name="CsvMappingComboBox" ItemsSource="{Binding Path=CsvMappingFileNames, ElementName=Root}"
                                              SelectedItem="{Binding Evaluation.Value}"
                                              SelectionChanged="CsvMappingComboBoxOnSelectionChanged"
                                              Style="{StaticResource FlatStyleCombobox}">
                                    </ComboBox>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="TimeItemContentTemplate" DataType="{x:Type eval:TimeEvalDataViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Header" />
                                        <ColumnDefinition/>
                                        <!--<ColumnDefinition Width="20"/>-->
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Text="{Binding Name}" Margin="0 0 5 0" VerticalAlignment="Center"/>

                                    <telerik:RadDateTimePicker
                                        HorizontalAlignment="Left"
                                        Margin="5 0 0 0"
                                        Grid.Column="1" InputMode="TimePicker"
                                        Width="120"
                                        x:Name="TimePicker"
                                        
                                        Culture="{Binding ElementName=Root, Path=GetTimeEvalFormatCulture}"
                                        SelectedValue="{Binding Evaluation.Value, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource TimeSpanToDateTimeConverter}}"
                                        SelectionChanged="OnDateTimeSelectionChanged">
                                    </telerik:RadDateTimePicker>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="OperandItemDataTemplate" DataType="{x:Type presentation:EvaluationConfigDataViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Header"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Margin="1 1 5 1" Grid.Column="0" Text="{x:Static resources:MediaStrings.FormulaEditor_CollectionPropertyItem}"/>

                                    <TextBox Margin="1"
                                             Grid.Column="1"
                                             Style="{StaticResource TextBoxWithValidation}"
                                             Text="{Binding EvaluationWithReferenceCounting, Mode=TwoWay, UpdateSourceTrigger=Explicit,
                                             Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=False,
                                             ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                             GotFocus="OnOperandGotFocus" 
                                             Loaded="OnOperandLostFocus"
                                             LostFocus="OnOperandLostFocus" />
                                    <Button Grid.Column="2"
                                                        Style="{StaticResource FlatHighlightButton}"
                                                        Margin="0 1 0 1"
                                                        Command="{Binding ElementName=Root, Path=DictionarySelectorCommand}" CommandParameter="{Binding .}">
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/triangle_right_light_8x8.png" Width="8" Height="8" />
                                    </Button>

                                    <Button Margin="0 1 0 1" Grid.Column="3" 
                                                        Style="{StaticResource FlatHighlightButton}"
                                                        Command="{Binding ElementName=Root, Path=RemovePropertyFromListCommand}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ListAndItemAggregationConverter}">
                                                <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/remove_light_16x16.png" Width="16" Height="16" />
                                    </Button>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="MatchPropertyDataTemplate" DataType="eval:MatchDynamicPropertyDataViewModel">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"  SharedSizeGroup="Header"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Margin="1 1 5 1" Grid.Column="0" Text="{x:Static resources:MediaStrings.FormulaEditor_CollectionPropertyItem}"/>

                                    <!--<TextBox Margin="1" Grid.Column="1" Text="{Binding ., Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=false}"/>-->

                                    <TextBox Text="{Binding Column.Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" KeyUp="OnArgumentTextBoxKeyUp" />
                                    <TextBlock Text=":" Grid.Column="2" />

                                    <TextBox Margin="1"
                                             Grid.Column="3"
                                             Style="{StaticResource TextBoxWithValidation}"
                                            Text="{Binding EvaluationWithReferenceCounting, 
                                            Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnDataErrors=True, NotifyOnValidationError=True,
                                            Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=false}" 
                                            GotFocus="OnOperandGotFocus" 
                                            Loaded="OnOperandLostFocus"
                                            LostFocus="OnOperandLostFocus"/>

                                    <Button Grid.Column="4"
                                                        Style="{StaticResource FlatHighlightButton}"
                                                        Margin="0 1 0 1"
                                                        Command="{Binding ElementName=Root, Path=DictionarySelectorCommand}" CommandParameter="{Binding .}">
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/triangle_right_light_8x8.png" Width="8" Height="8" />
                                    </Button>

                                    <Button Margin="0 1 0 1" Grid.Column="5" 
                                                        Style="{StaticResource FlatHighlightButton}"
                                                        Command="{Binding ElementName=Root, Path=RemovePropertyFromListCommand}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ListAndItemAggregationConverter}">
                                                <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/remove_light_16x16.png" Width="16" Height="16" />
                                    </Button>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="CasePropertyDataTemplate" DataType="eval:CaseDynamicPropertyDataViewModel">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"  SharedSizeGroup="Header"/>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Margin="1 1 5 1" Grid.Column="0" Text="{x:Static resources:MediaStrings.FormulaEditor_CollectionPropertyItem}"/>

                                    <!--<TextBox Margin="1" Grid.Column="1" Text="{Binding ., Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=false}"/>-->

                                    <TextBox Text="{Binding Value.Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" KeyUp="OnArgumentTextBoxKeyUp" />
                                    <TextBlock Text=":" Grid.Column="2" Margin="1" />

                                    <TextBox Margin="1"
                                             Style="{StaticResource TextBoxWithValidation}"
                                            Grid.Column="3"
                                            Text="{Binding EvaluationWithReferenceCounting, 
                                            Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnDataErrors=True, NotifyOnValidationError=True,
                                            Converter={StaticResource EvaluationToStringConverter}, ConverterParameter=false}" 
                                            GotFocus="OnOperandGotFocus" 
                                            Loaded="OnOperandLostFocus"
                                            LostFocus="OnOperandLostFocus"/>

                                    <Button Grid.Column="4"
                                                        Style="{StaticResource FlatHighlightButton}"
                                                        Margin="0 1 0 1"
                                                        Command="{Binding ElementName=Root, Path=DictionarySelectorCommand}" CommandParameter="{Binding .}">
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/triangle_right_light_8x8.png" Width="8" Height="8" />
                                    </Button>

                                    <Button Margin="0 1 0 1" Grid.Column="5" 
                                                        Style="{StaticResource FlatHighlightButton}"
                                                        Command="{Binding ElementName=Root, Path=RemovePropertyFromListCommand}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ListAndItemAggregationConverter}">
                                                <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/remove_light_16x16.png" Width="16" Height="16" />
                                    </Button>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="ListItemContentTemplate">
                                <StackPanel>
                                    <ItemsControl x:Name="ListItemsControl" ItemsSource="{Binding Evaluation.Value}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <ContentPresenter Content="{Binding}">
                                                    <ContentPresenter.Style>
                                                        <Style TargetType="ContentPresenter">
                                                            <Setter Property="ContentTemplate" Value="{DynamicResource OperandItemDataTemplate}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Converter={StaticResource IsTypeOfConverter},
                                                                    ConverterParameter={x:Type eval:MatchDynamicPropertyDataViewModel}}" Value="True">
                                                                    <Setter Property="ContentTemplate" Value="{DynamicResource MatchPropertyDataTemplate}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Converter={StaticResource IsTypeOfConverter}, 
                                                                                         ConverterParameter={x:Type eval:CaseDynamicPropertyDataViewModel}}" Value="True">
                                                                    <Setter Property="ContentTemplate" Value="{DynamicResource CasePropertyDataTemplate}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentPresenter.Style>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <Button Margin="0 1 0 1" Grid.Column="1" Command="{Binding ElementName=Root, Path=AddOperantToPropertyListCommand}" 
                                            CommandParameter="{Binding Evaluation.Value}"
                                            Content="{x:Static resources:MediaStrings.FormulaEditor_AddNewPropertyItem}"
                                            Style="{StaticResource FlatHighlightButton}"/>
                                </StackPanel>
                            </DataTemplate>
                        </Grid.Resources>

                        <TextBlock Grid.Row="0" Text="{Binding ElementName=FormulaComboBox, Path=SelectedItem.Name}"
                                   FontWeight="Bold" Foreground="{StaticResource FormulaEditorEditBoxTitleForegroundColorBrush}"
                                   Margin="3 0 0 0" />
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
                            <ItemsControl ItemsSource="{Binding DataValue.Formula, Converter={StaticResource EvaluationPropertyListConverter}}" Margin="3 0 0 0"
                                          Grid.IsSharedSizeScope="True">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="eval:EvaluationPropertyDataViewModel">
                                        <ContentPresenter Content="{Binding}" Margin="0 1 0 1">
                                            <ContentPresenter.Style>
                                                <Style TargetType="ContentPresenter">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource NormalItemContentTemplate}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Evaluation.Value, Converter={StaticResource IsListConverter}}" Value="True">
                                                            <Setter Property="ContentTemplate" Value="{DynamicResource ListItemContentTemplate}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Evaluation, Converter={StaticResource IsCsvMappingEvalFileNameConverter}}" Value="True">
                                                            <Setter Property="ContentTemplate" Value="{DynamicResource CsvMappingFileNameTemplate}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Evaluation, Converter={StaticResource IsDateEvalConverter}}" Value="True">
                                                            <Setter Property="ContentTemplate" Value="{DynamicResource DateItemContentTemplate}" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Evaluation, Converter={StaticResource IsTimeEvalConverter}}" Value="True">
                                                            <Setter Property="ContentTemplate" Value="{DynamicResource TimeItemContentTemplate}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Evaluation.Value, Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type sys:Boolean}}"
                                                                     Value="True">
                                                            <Setter Property="ContentTemplate" Value="{DynamicResource BoolItemDataTemplate}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentPresenter.Style>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>

                        <Grid Grid.Row="2">
                            <Expander Header="{x:Static resources:MediaStrings.FormulaEditor_HelpLabel}"
                                      Margin="0 5 0 0" Collapsed="OnHelpTextCollapsed"
                                      IsExpanded="True" ExpandDirection="Down" Style="{StaticResource FlatStyleExpander}">
                                <Grid Background="{StaticResource FormulaEditorEditBoxHelpTextBackgroundColorBrush}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <!--<RowDefinition Height="25"/>-->
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Padding="3" Height="92" TextWrapping="Wrap" TextTrimming="None"
                                               VerticalAlignment="Top" 
                                               Text="{Binding ElementName=FormulaComboBox, Path=SelectedItem.EvaluationType, Converter={StaticResource HelpTextConverter}}"
                                               ScrollViewer.VerticalScrollBarVisibility="Auto"
                                               Foreground="{StaticResource FormulaEditorEditBoxHelpTextForegroundColorBrush}"/>

                                    <!--<TextBlock Grid.Row="1" Padding="3"
                                               Foreground="{StaticResource FormulaEditorEditBoxHelpTextForegroundColorBrush}">
                                        <Hyperlink NavigateUri="{Binding ElementName=FormulaComboBox, Path=SelectedItem.Value, Converter={StaticResource HelpLinkConverter}}" RequestNavigate="OnNavigateToMoreInformation">
                                            <TextBlock Text="{x:Static resources:MediaStrings.FormulaEditor_MoreInformationLinkText}"/>
                                        </Hyperlink>
                                    </TextBlock>-->
                                </Grid>
                            </Expander>
                        </Grid>
                        
                        <GridSplitter Grid.Row="2" 
                                      HorizontalAlignment="Stretch" 
                                      VerticalAlignment="Top"
                                      ResizeDirection="Rows" ResizeBehavior="PreviousAndCurrent"
                                      Focusable="False"
                                      Height="5" />
                    </Grid>
                </Border>

            </Grid>
        </TabItem>

        <TabItem Header="{x:Static resources:MediaStrings.FormulaEditor_ExpertTab}" Name="ExpertTabItem">
            <TextBox TextWrapping="Wrap" 
                     BorderThickness="0"
                     Height="auto"
                     BorderBrush="{StaticResource TextBoxHighlightFrameColorBrush}"
                     Style="{StaticResource TextBoxWithValidation}"
                     IsReadOnly="{Binding SelectedPredefinedFormula, Converter={StaticResource NotNullConverter}}"
                     Text="{Binding Path=ExpertEvaluationPart, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Mode=TwoWay}"
                     KeyUp="OnExpertTextBoxKeyUp">
            </TextBox>
        </TabItem>
    </TabControl>
</UserControl>
