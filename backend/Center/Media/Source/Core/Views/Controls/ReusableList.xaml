<UserControl x:Class="Gorba.Center.Media.Core.Views.Controls.ReusableList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:resources="clr-namespace:Gorba.Center.Media.Core.Resources"
             xmlns:viewModels="clr-namespace:Gorba.Center.Media.Core.ViewModels"
             xmlns:extensions="clr-namespace:Gorba.Center.Media.Core.Extensions"
             xmlns:controls="clr-namespace:Gorba.Center.Media.Core.Views.Controls"
             xmlns:converters="clr-namespace:Gorba.Center.Media.Core.Converters"
             xmlns:dragDropExtension="clr-namespace:Gorba.Center.Media.Core.Extensions.DragDropExtension"
             xmlns:cycle="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Presentation.Cycle"
             xmlns:presentation="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Presentation"
             xmlns:section="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Presentation.Section"
             xmlns:converters1="clr-namespace:Gorba.Center.Common.Wpf.Framework.Converters;assembly=Gorba.Center.Common.Wpf.Framework"
             mc:Ignorable="d" Name="Root"
             d:DesignHeight="300" d:DesignWidth="300">
    <Border>
        <Border.Resources>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <converters:EqualsConverter x:Key="EqualsConverter"/>
            <converters:NotZeroConverter x:Key="NotZeroConverter" />
            <converters:NotNullConverter x:Key="NotNullConverter" />
            <converters1:ToTypeConverter x:Key="ToTypeConverter" />
            <converters:ShowCycleRefIconConverter x:Key="ShowCycleRefIconConverter" />
            <converters:CycleRefTooltipConverter x:Key="CycleRefTooltipConverter" />
            <converters:IsTypeOfConverter x:Key="IsTypeOfConverter" />
            <converters:DataValueToValueConverter x:Key="DataValueToValueConverter" />
            <dragDropExtension:ReusableListDropHandler x:Key="DropHandler" />
        </Border.Resources>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" Margin="0 0 0 3"
                          PreviewMouseWheel="OnScrollViewerPreviewMouseWheel"
                          HorizontalScrollBarVisibility="Disabled">
                <ScrollViewer.Style>
                    <Style TargetType="ScrollViewer">
                        <Style.Triggers>
                            <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                                <Setter Property="Margin" Value="0 0 5 0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ScrollViewer.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ContentPresenter Grid.Row="0" Content="{Binding ElementName=Root, Path=PrefixContent}" />

                    <Rectangle Grid.Row="1" Height="1" Fill="{StaticResource ResourceManagerSeparatorBackgroundColorBrush}" 
                       VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="5 0 5 5">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Root, Path=PrefixContent, Converter={StaticResource NotNullConverter}}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <Border Grid.Row="2" Padding="3 0 3 0">
                        <ListBox Name="ReusableListBox" Background="Transparent" BorderThickness="0" ItemsSource="{Binding ElementName=Root, Path=Entities}"
                             dragDropExtension:DragDropHelper.IsDropTarget="True"
                             dragDropExtension:DragDropHelper.DropHandler="{StaticResource DropHandler}"
                             dragDropExtension:DragDropHelper.IsDragSource="True"
                             SelectionChanged="OnListBoxSelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                            <ListBox.Resources>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <Trigger Property="Header" Value="">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="Header" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <ContextMenu x:Key="ListBoxItemContextMenu">
                                    <MenuItem Style="{StaticResource FlatContextMenuItem}"
                                              Header="{Binding Path=NewButtonText, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              Command="{Binding Path=CreateNewEntityWrapper, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    <MenuItem Style="{StaticResource FlatContextMenuItem}"
                                              Header="{Binding Path=RenameButtonText, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              Command="{Binding Path=EditEntityNameWrapper, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              CommandParameter="{Binding}"/>
                                    <MenuItem Style="{StaticResource FlatContextMenuItem}"
                                              Header="{Binding Path=RemoveButtonText, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              Command="{Binding Path=DeleteEntity, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              CommandParameter="{Binding}" InputGestureText="{x:Static resources:MediaStrings.Keyboard_Shortcuts_Delete}"/>
                                    <MenuItem Style="{StaticResource FlatContextMenuItem}"
                                              Header="{Binding Path=CloneButtonText, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              Command="{Binding Path=CloneEntity, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              CommandParameter="{Binding}"/>
                                </ContextMenu>

                                <Style TargetType="ListBoxItem" x:Key="ReusableListBoxItem">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="IsEnabled" Value="{Binding ElementName=Root, Path=DataContext.IsValid}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                                    <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource EqualsConverter}" Mode="TwoWay">
                                                                <Binding ElementName="Root" Path="SelectedEntity"/>
                                                                <Binding Path=""/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>

                                                        <Setter Property="Background" Value="{StaticResource LayoutNavigationSelectedEntityColorBrush}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource EqualsConverter}" Mode="TwoWay">
                                                                <Binding ElementName="Root" Path="HighlightedEntity"/>
                                                                <Binding Path=""/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>

                                                        <Setter Property="Background" Value="{StaticResource ReusableListHighlightedEntityColorBrush}"/>
                                                    </DataTrigger>

                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource ReusableListHighlightedEntityColorBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </ListBox.Resources>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ReusableListBoxItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource ListBoxItemContextMenu}" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="viewModels:IReusableEntity">
                                    <Grid Name="containerGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition>
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="ColumnDefinition">
                                                        <Setter Property="Width" Value="25" />

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=Root, Path=ShowRadioSelector}" Value="False">
                                                                <Setter Property="Width" Value="0" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="20"/>
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>

                                        <Button Grid.Column="0" Margin="0 0 5 0"
                                                Command="{Binding ElementName=Root, Path=ChooseEntityWrapper}"
                                                CommandParameter="{Binding}" Background="Transparent" BorderThickness="0" 
                                                MouseDoubleClick="RadioButtonOnMouseDoubleClick">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource FlatButton}">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/radiobutton_off.png" 
                                                                   Width="15" Height="15"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=Root, Path=ShowRadioSelector}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>

                                                        <DataTrigger Value="True">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource EqualsConverter}">
                                                                    <Binding ElementName="Root" Path="SelectedEntity"/>
                                                                    <Binding Path=""/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>

                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <Image  Source="/Gorba.Center.Media.Core;component/Resources/Images/radiobutton_on.png" 
                                                                            Width="15" Height="15"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <TextBlock Name="NameTextBlock" Grid.Column="1" 
                                                   Margin="0 2 0 0" 
                                                   TextTrimming="CharacterEllipsis">
                                            <TextBlock.InputBindings>
                                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ElementName=Root, Path=NameDoubleClickWrapper}" CommandParameter="{Binding}"/>
                                            </TextBlock.InputBindings>
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                         <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <TextBox Name="NameEditTextBox"  Grid.Column="1"
                                                 KeyUp="OnEditNameKeyUp"
                                                 LostFocus="OnEditNameLostFocus"
                                                 PreviewLostKeyboardFocus="OnEditNamePreviewLostFocus"
                                                 BorderThickness="0"
                                                 SelectionBrush="{StaticResource TextBoxHighlightTextColorBrush}"
                                                 extensions:FocusExtension.IsFocused="{Binding Path=IsInEditMode, Mode=TwoWay}">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsInEditMode, Mode=TwoWay}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        
                                        <TextBlock Grid.Column="2" Text="&#xf00c;" VerticalAlignment="Center"
                                                   FontFamily="/Gorba.Center.Media.Core;component/Resources/#FontAwesome"
                                                   Foreground="{StaticResource TextBlockDefaultForegroundColorBrush}"
                                                   ToolTip="{Binding IsUsedToolTip}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ReferencesCount, Converter={StaticResource NotZeroConverter}}" Value="True" />
                                                                <Condition Binding="{Binding ShowIsUsed, ElementName=Root}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                            
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <Image Name="ReferenceFlag"
                                               Grid.Column="2" 
                                               VerticalAlignment="Center" 
                                               ToolTip="{Binding Converter={StaticResource CycleRefTooltipConverter}}"
                                               Width="16" Height="16"
                                               Source="{Binding ReferenceFlagIcon, ElementName=Root}">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ShowReferenceFlag, ElementName=Root}" Value="True" />
                                                                <Condition Binding="{Binding Converter={StaticResource ShowCycleRefIconConverter}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                            
                                        </Image>
                                        
                                        
                                        <Button Grid.Column="3" Margin="5 0 0 0"
                                                Command="{Binding ElementName=Root, Path=DeleteEntity}"
                                                CommandParameter="{Binding}" Name="RemoveButton"
                                                ToolTip="{x:Static resources:MediaStrings.ReusableList_DeleteButtonTooltip}">
                                            <Image Source="/Gorba.Center.Media.Core;component/Resources/Images/Icons/remove_dark10x10.png" 
                                                   Width="10" Height="10"/>
                                            
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource FlatButton}">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                    
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True" />
                                                                <Condition Binding="{Binding ShowRemoveButton, ElementName=Root}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=Root, Path=IsInEditMode}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <!--<DataTrigger Binding="{Binding Path=IsInEditMode}" Value="True">
                                                            <Setter Property="" Value="False" />
                                                        </DataTrigger>-->
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                    </Grid>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Converter={StaticResource ToTypeConverter}}" Value="{x:Type presentation:LayoutConfigDataViewModel}">
                                            <Setter TargetName="NameTextBlock" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay}"/>
                                            <Setter TargetName="containerGrid" Property="ToolTip" 
                                                    Value="{Binding Name, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource ToTypeConverter}}" Value="{x:Type cycle:StandardCycleRefConfigDataViewModel}">
                                            <Setter TargetName="NameTextBlock" Property="Text" Value="{Binding Reference.Name.Value}"/>
                                            <Setter TargetName="containerGrid" Property="ToolTip" Value="{Binding Reference.Name.Value}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" Value="{Binding Reference.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Converter={StaticResource ToTypeConverter}}" Value="{x:Type cycle:EventCycleRefConfigDataViewModel}">
                                            <Setter TargetName="NameTextBlock" Property="Text" Value="{Binding Reference.Name.Value}"/>
                                            <Setter TargetName="containerGrid" Property="ToolTip" Value="{Binding Reference.Name.Value}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" Value="{Binding Reference.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type section:SectionConfigDataViewModelBase}}" Value="True">
                                            <Setter TargetName="NameTextBlock" Property="Text" Value="{Binding Name}"/>
                                            <Setter TargetName="containerGrid" Property="ToolTip" Value="{Binding Name}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" Value="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type presentation:EvaluationConfigDataViewModel}}" Value="True">
                                            <Setter TargetName="NameTextBlock" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay}" />
                                            <Setter TargetName="containerGrid" Property="ToolTip" 
                                                    Value="{Binding Name, Converter={StaticResource DataValueToValueConverter}}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type presentation:PhysicalScreenConfigDataViewModel}}" Value="True">
                                            <Setter TargetName="NameTextBlock" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay}" />
                                            <Setter TargetName="containerGrid" Property="ToolTip" 
                                                    Value="{Binding Name, Converter={StaticResource DataValueToValueConverter}}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Converter={StaticResource ToTypeConverter}}" Value="{x:Type presentation:CyclePackageConfigDataViewModel}">
                                            <Setter TargetName="NameTextBlock" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay}"/>
                                            <Setter TargetName="containerGrid" Property="ToolTip" 
                                                    Value="{Binding Name, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay}"/>
                                            <Setter TargetName="NameEditTextBox" Property="Text" 
                                                    Value="{Binding Name, ValidatesOnDataErrors=True, NotifyOnValidationError=True, Converter={StaticResource DataValueToValueConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Border>
                </Grid>
            </ScrollViewer>

            <Rectangle Grid.Row="2" Height="1" Fill="{StaticResource ResourceManagerSeparatorBackgroundColorBrush}" 
                       VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="5 0 5 0">
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Root, Path=ShowCreateButton}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            
            <Border Padding="3 0 3 0" Grid.Row="2">
                <controls:NewEntityButton CreateNewEntityCommand="{Binding ElementName=Root, Path=CreateNewEntityWrapper}"
                                          NewButtonText="{Binding ElementName=Root, Path=NewButtonText}" 
                                          IsEnabled="{Binding ElementName=Root, Path=ShowCreateButton}"
                                          Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"/>
            </Border>
        </Grid>
    </Border>
</UserControl>
