<frameworkViews:TrackingWindow x:Class="Gorba.Center.Media.Core.Views.MediaShellWindow"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:viewModels="clr-namespace:Gorba.Center.Media.Core.ViewModels"
                               xmlns:views="clr-namespace:Gorba.Center.Media.Core.Views"
                               xmlns:resources="clr-namespace:Gorba.Center.Media.Core.Resources"
                               xmlns:frameworkViews="clr-namespace:Gorba.Center.Common.Wpf.Views;assembly=Gorba.Center.Common.Wpf.Views"
                               xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                               xmlns:interaction="clr-namespace:Gorba.Center.Common.Wpf.Framework.Interaction;assembly=Gorba.Center.Common.Wpf.Framework"
                               xmlns:notifications="clr-namespace:Gorba.Center.Common.Wpf.Framework.Notifications;assembly=Gorba.Center.Common.Wpf.Framework"
                               xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
                               xmlns:consistency="clr-namespace:Gorba.Center.Media.Core.DataViewModels.Consistency"
                               xmlns:converters="clr-namespace:Gorba.Center.Media.Core.Converters"
                               xmlns:controls="clr-namespace:Gorba.Center.Media.Core.Views.Controls"
                               xmlns:presentation="clr-namespace:Gorba.Common.Configuration.Infomedia.Presentation;assembly=Gorba.Common.Configuration.Infomedia"
                               xmlns:toolbars="clr-namespace:Gorba.Center.Media.Core.Views.Toolbars"
                               xmlns:editors="clr-namespace:Gorba.Center.Media.Core.Views.Editors"
                               xmlns:interaction1="clr-namespace:Gorba.Center.Media.Core.Views.Interaction"
                               xmlns:clientViews="clr-namespace:Gorba.Center.Common.Wpf.Client.Views;assembly=Gorba.Center.Common.Wpf.Client"
                               xmlns:commonConverters="clr-namespace:Gorba.Center.Common.Wpf.Framework.Converters;assembly=Gorba.Center.Common.Wpf.Framework"
                               xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                               xmlns:extensions="clr-namespace:Gorba.Center.Common.Wpf.Framework.Extensions;assembly=Gorba.Center.Common.Wpf.Framework"
                               xmlns:components="clr-namespace:Gorba.Center.Common.Wpf.Views.Components;assembly=Gorba.Center.Common.Wpf.Views"
                               xmlns:local="clr-namespace:Gorba.Center.Media.Core.ViewModels.CommandParameters"
                               xmlns:projectStates="clr-namespace:Gorba.Center.Media.Core.Controllers.ProjectStates"
                               xmlns:options="clr-namespace:Gorba.Center.Common.Wpf.Views.Components.Options;assembly=Gorba.Center.Common.Wpf.Views"
                               xmlns:options1="clr-namespace:Gorba.Center.Common.Wpf.Framework.ViewModels.Options;assembly=Gorba.Center.Common.Wpf.Framework"
                               xmlns:options2="clr-namespace:Gorba.Center.Media.Core.ViewModels.Options"
                               xmlns:System="clr-namespace:System;assembly=mscorlib"
                               xmlns:directXRenderer="clr-namespace:Gorba.Common.Configuration.Infomedia.DirectXRenderer;assembly=Gorba.Common.Configuration.Infomedia"
                               mc:Ignorable="d"  Name="Root" AutomationProperties.AutomationId="MediaShellWindow"
                               d:DesignWidth="700" d:DesignHeight="400"
                               MinWidth="800" MinHeight="600"
                               Style="{StaticResource MainWindowStyle}"
                               d:DataContext="{d:DesignInstance viewModels:MediaShell}" 
                               Title="{Binding Path=Title}" UseLayoutRounding="True" IsDirty="{Binding ApplicationState.IsDirty}"
                               Icon="{extensions:IconMarkup Source=/Gorba.Center.Media.Core;component/Resources/media.ico, Size=24}"
                               TextOptions.TextFormattingMode="Display"
                               TextOptions.TextRenderingMode="ClearType">
    <frameworkViews:TrackingWindow.Resources>
        <converters:ConsistencyToSeverityConverter x:Key="ConsistencyConverter" />
        <converters:EnumToBoolConverter x:Key="EnumToBoolConverter" />
        <converters:NotNullConverter x:Key="NotNullConverter" />
        <commonConverters:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
        <commonConverters:HalfValueConverter x:Key="HalfValueConverter" />
        
        <Style x:Key="DisableableMenuButton" TargetType="Button" BasedOn="{StaticResource MenuButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProject}" Value="{x:Null}" >
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </frameworkViews:TrackingWindow.Resources>

    <frameworkViews:TrackingWindow.InputBindings>
        <KeyBinding Key="S"   Modifiers="Control+Shift" Command="{Binding CheckInProjectCommand}"/>
        <KeyBinding Key="F12"                           Command="ApplicationCommands.SaveAs" />
        <KeyBinding Key="N"   Modifiers="Control"       Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileNew}"/>
        <KeyBinding Key="O"   Modifiers="Control"       Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileOpen}"/>
        <KeyBinding Key="I"   Modifiers="Control"       Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileImport}"/>
        <KeyBinding Key="E"   Modifiers="Control"       Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileExport}"/>
        <KeyBinding Key="F5"                            Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileResourceManager}"/>
        <KeyBinding Key="F6"                            Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileReplacement}"/>
        <KeyBinding Key="F7"                            Command="{Binding ShowMenuEntryCommand}"    CommandParameter="{x:Static local:MenuNavigationParameters+MainMenuEntries.FileFormulaManager}"/>
        <KeyBinding Key="F9"                            Command="{Binding ToggleSimulationCommand}"/>
        <KeyBinding Key="F10"                           Command="{Binding ToggleEdgeSnapCommand}"/>
        <KeyBinding Key="Escape"                        Command="{Binding CloseMainMenuCommand}"/>
    </frameworkViews:TrackingWindow.InputBindings>

    <frameworkViews:TrackingWindow.MenuItems>
        <Button Style="{StaticResource MenuButton}" Command="{x:Static shell:SystemCommands.ShowFileMenuCommand}" 
                Content="{x:Static resources:MediaStrings.Window_File}" Name="FileMenuButton"
                AutomationProperties.AutomationId="MediaShellWindow_FileMenu" />

        <Button Style="{StaticResource DisableableMenuButton}" Command="{x:Static shell:SystemCommands.ShowEditMenuCommand}" 
                Content="{x:Static resources:MediaStrings.Window_Edit}" Name="EditMenuButton"
                AutomationProperties.AutomationId="MediaShellWindow_EditMenu"/>

        <Button Style="{StaticResource DisableableMenuButton}" Command="{x:Static shell:SystemCommands.ShowViewMenuCommand}" 
                Content="{x:Static resources:MediaStrings.Window_View}" Name="ViewMenuButton"
                AutomationProperties.AutomationId="MediaShellWindow_ViewMenu" />

        <!--<Button Style="{StaticResource MenuButton}" Command="{Binding ShowFormulaEditorCommand}" 
                Content="Test" />-->
    </frameworkViews:TrackingWindow.MenuItems>

    <frameworkViews:TrackingWindow.LoginInformation>
        <clientViews:LoginInformationView DataContext="{Binding LoginInformation}" />
    </frameworkViews:TrackingWindow.LoginInformation>

    <telerik:RadBusyIndicator IsBusy="{Binding IsBusy}">
        <telerik:RadBusyIndicator.BusyContent>
            <Grid>
                <StackPanel>
                    <TextBlock Text="{Binding BusyContentText}" />
                    <TextBlock Text="{Binding CurrentBusyProgressText}"
                               Visibility="{Binding IsBusyIndeterminate, Converter={StaticResource InvertedBooleanConverter}}" />
                </StackPanel>
            </Grid>
        </telerik:RadBusyIndicator.BusyContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="22" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <!--<Setter Property="Width" Value="Auto"/>-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MediaApplicationState.CurrentProject}" Value="{x:Null}" >
                                        <Setter Property="Width" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>

                    <ColumnDefinition AutomationProperties.AutomationId="MediaShellWindow_SidebarColumn">
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <Setter Property="Width" Value="180"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MediaApplicationState.CurrentProject}" Value="{x:Null}" >
                                        <Setter Property="Width" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="60" x:Name="CycleNavigationSlideOutRowDefinition"/>
                </Grid.RowDefinitions>

                <!-- Canvas Layer -->
                <ContentControl Content="{Binding Editor}" Margin="43 0 0 0" Focusable="True" FocusManager.IsFocusScope="True" PreviewLostKeyboardFocus="OnPreviewLostKeyboardFocus">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModels:AudioEditorViewModel}">
                            <editors:AudioEditor AutomationProperties.AutomationId="MediaShellWindow_AudioEditor" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:TftEditorViewModel}">
                            <editors:LayoutEditor Zoom="{Binding Zoom, ElementName=ZoomIndicator, Mode=TwoWay}" 
                                            LayoutPosition="{Binding Parent.LayoutPosition, Mode=TwoWay}" 
                                            LayoutResolutionWidth="{Binding Parent.MediaApplicationState.CurrentVirtualDisplay.Width.Value}" 
                                            LayoutResolutionHeight="{Binding Parent.MediaApplicationState.CurrentVirtualDisplay.Height.Value}" 
                                            SelectedTool="{Binding Parent.SelectedEditorTool, Mode=TwoWay}" 
                                            AutomationProperties.AutomationId="MediaShellWindow_LayoutEditor"
                                            CurrentPhysicalScreenConfig="{Binding Parent.MediaApplicationState.CurrentPhysicalScreen}"
                                            CurrentVirtualDisplayConfig="{Binding Parent.MediaApplicationState.CurrentVirtualDisplay}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:LedEditorViewModel}">
                            <editors:LedEditor AutomationProperties.AutomationId="MediaShellWindow_LedEdtior"
                                           Zoom="{Binding Zoom, ElementName=ZoomIndicator, Mode=TwoWay}"
                                           LayoutPosition="{Binding Parent.LayoutPosition, Mode=TwoWay}" 
                                           LayoutResolutionWidth="{Binding Parent.MediaApplicationState.CurrentVirtualDisplay.Width.Value}" 
                                            LayoutResolutionHeight="{Binding Parent.MediaApplicationState.CurrentVirtualDisplay.Height.Value}" 
                                           SelectedTool="{Binding Parent.SelectedEditorTool, Mode=TwoWay}"
                                           CurrentPhysicalScreenConfig="{Binding Parent.MediaApplicationState.CurrentPhysicalScreen}"
                                           CurrentVirtualDisplayConfig="{Binding Parent.MediaApplicationState.CurrentVirtualDisplay}" />
                        </DataTemplate>
                    </ContentControl.Resources>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <!--<DataTrigger Binding="{Binding MediaApplicationState.CurrentPhysicalScreen.Type.Value, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.Audio}}" Value="true">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>-->
                                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProject}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <!-- Overlay Layer -->
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MediaApplicationState.CurrentProject}" Value="{x:Null}" >
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="43"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <!-- Toolbars -->
                        <toolbars:TftEditorToolbar x:Name="NormalEditorToolbar"
                                                   DataContext="{Binding TftEditorToolbarViewModel}"
                                                   SelectedTool="{Binding Path=DataContext.SelectedEditorTool, ElementName=Root, Mode=TwoWay}"
                                                   AutomationProperties.AutomationId="MediaShellWindow_EditorToolbar">
                            <toolbars:TftEditorToolbar.Style>
                                <Style TargetType="toolbars:TftEditorToolbar">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=DataContext.MediaApplicationState.CurrentPhysicalScreen.Type.Value, ElementName=Root, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.TFT}}" Value="true">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </toolbars:TftEditorToolbar.Style>
                        </toolbars:TftEditorToolbar>
                        
                        <toolbars:AudioEditorToolbar Grid.Column="0" x:Name="AudioEditorToolbar" SelectedTool="{Binding SelectedEditorTool, Mode=TwoWay}"
                                         AutomationProperties.AutomationId="MediaShellWindow_AudioEditorToolbar">
                            <toolbars:AudioEditorToolbar.Style>
                                <Style TargetType="toolbars:AudioEditorToolbar">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaApplicationState.CurrentPhysicalScreen.Type.Value, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.Audio}}" Value="true">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </toolbars:AudioEditorToolbar.Style>
                        </toolbars:AudioEditorToolbar>

                        <toolbars:LedEditorToolbar Grid.Column="0" x:Name="LedEditorToolbar" SelectedTool="{Binding SelectedEditorTool, Mode=TwoWay}"
                                         AutomationProperties.AutomationId="MediaShellWindow_LedEditorToolbar">
                            <toolbars:LedEditorToolbar.Style>
                                <Style TargetType="toolbars:LedEditorToolbar">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaApplicationState.CurrentPhysicalScreen.Type.Value, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.LED}}" Value="true">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </toolbars:LedEditorToolbar.Style>
                        </toolbars:LedEditorToolbar>
                        
                    </Grid>

                    <!-- Layout Navigator -->
                    <views:LayoutNavigation Margin="50 10 0 0" Width="160"  HorizontalAlignment="Left" VerticalAlignment="Top"
                                        AutomationProperties.AutomationId="MediaShellWindow_LayoutNavigation" 
                                        Layout="{Binding MediaApplicationState.CurrentLayout}"/>

                    <!-- Resolution Navigator -->
                    <views:ResolutionNavigator Margin="0 10 10 0" HorizontalAlignment="Right" VerticalAlignment="Top"
                                           AutomationProperties.AutomationId="MediaShellWindow_ResolutionNavigator"
                                           PhysicalScreen="{Binding MediaApplicationState.CurrentPhysicalScreen}"
                                           VirtualDisplay="{Binding MediaApplicationState.CurrentVirtualDisplay}" />

                    <!-- Zoom Indicator -->
                    <controls:ZoomIndicator Width="Auto" Height="Auto" Margin="0 0 10 10" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                     x:Name="ZoomIndicator" Zoom="{Binding Zoom, Mode=TwoWay}" 
                                     AutomationProperties.AutomationId="MediaShellWindow_ZoomIndicator">
                        <controls:ZoomIndicator.Style>
                            <Style TargetType="controls:ZoomIndicator">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MediaApplicationState.CurrentPhysicalScreen.Type.Value, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.Audio}}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:ZoomIndicator.Style>
                    </controls:ZoomIndicator>


                    <!-- Editor Popups -->
                    <Canvas>
                        <i:Interaction.Triggers>

                            <interaction:InteractionRequestTrigger SourceObject="{Binding LayoutNavigationInteractionRequest}">
                                <interaction:InteractionAction Width="300" CanvasTop="50" CanvasLeft="50" Modal="True" IsToggle="True" 
                                                           ToggleSourceName="LayoutNavigationButton" >
                                    <interaction:InteractionAction.Dialog>
                                        <interaction1:LayoutNavigationDialog AutomationProperties.AutomationId="MediaShellWindow_LayoutNavigationDialog" />
                                    </interaction:InteractionAction.Dialog>
                                </interaction:InteractionAction>
                            </interaction:InteractionRequestTrigger>

                            <interaction:InteractionRequestTrigger SourceObject="{Binding ResolutionNavigationInteractionRequest}">
                                <interaction:InteractionAction Width="480" CanvasTop="50" CanvasRight="10" Modal="True" IsToggle="True" 
                                                           ToggleSourceName="ResolutionNavigationButton" >
                                    <interaction:InteractionAction.Dialog>
                                        <interaction1:ResolutionNavigationDialog AutomationProperties.AutomationId="MediaShellWindow_ResolutionNavigationDialog" />
                                    </interaction:InteractionAction.Dialog>
                                </interaction:InteractionAction>
                            </interaction:InteractionRequestTrigger>


                        </i:Interaction.Triggers>
                    </Canvas>
                </Grid>

                <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Background="{StaticResource PopupBackgroundColorBrush}" Padding="3 0 3 0"
                    BorderThickness="1 0 0 0" BorderBrush="{StaticResource RightSidebarBorderBrush}">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProject}" Value="{x:Null}" >
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Grid x:Name="SidebarGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <views:PopupWindow Grid.Row="0" IsClosable="false" IsDragable="false" IsCollapsible="false" Title="{x:Static resources:MediaStrings.Shell_Properties}">
                            <views:LayoutElementDetails Elements="{Binding Editor.SelectedElements, Mode=TwoWay}" AutomationProperties.AutomationId="MediaShellWindow_LayoutElementDetails">
                                <!--<views:LayoutElementDetails.Style>
                            <Style TargetType="views:LayoutElementDetails">
                                    <Setter Property="Elements" Value="{Binding Editor.SelectedElements, Mode=TwoWay}" />
                                <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaApplicationState.CurrentPhysicalScreen.Type.Value, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.Audio}}" Value="true">
                                            <Setter Property="Elements" Value="{Binding Editor.CurrentAudioOutputElement.Elements, Mode=TwoWay}"/>
                                        </DataTrigger>
                                </Style.Triggers>
                                </Style>    
                            </views:LayoutElementDetails.Style>-->

                            </views:LayoutElementDetails>

                        </views:PopupWindow>

                        <GridSplitter Grid.Row="1" 
                                  HorizontalAlignment="Stretch" 
                                  VerticalAlignment="Top"
                                  ResizeDirection="Rows"
                                  ResizeBehavior="PreviousAndNext"
                                  Focusable="False"
                                  Height="3"/>

                        <views:PopupWindow Grid.Row="2" Height="Auto" IsClosable="false" IsDragable="false" 
                                       Title="{x:Static resources:MediaStrings.Shell_Layers}" Margin="0 3 0 0" x:Name="LayerEditorWindow">
                            <views:PopupWindow.Style>
                                <Style TargetType="views:PopupWindow">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaApplicationState.CurrentPhysicalScreen.Type.Value, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static presentation:PhysicalScreenType.Audio}}" Value="true">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </views:PopupWindow.Style>

                            <editors:LayerEditor VerticalAlignment="Stretch" Elements="{Binding Editor.Elements, Mode=TwoWay}" 
                                           Selected="{Binding Editor.SelectedElements, Mode=TwoWay}"
                                           AutomationProperties.AutomationId="MediaShellWindow_LayerEditor"/>

                        </views:PopupWindow>

                    </Grid>
                </Border>

                <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Stretch"
                          ResizeDirection="Columns"
                          Width="3"
                          Focusable="False"/>

                

                <Border Grid.Column="0" Grid.Row="1" Margin="0 0 0 0" 
                    BorderBrush="{StaticResource CycleNavigationBorderBrush}" 
                    BorderThickness="0 0 0 1"
                    Background="{StaticResource CycleNavigationBackgroundColorBrush}">
                    <Border.Effect>
                        <DropShadowEffect Direction="90" BlurRadius="10" ShadowDepth="1" Color="Black" Opacity="0.1"/>
                    </Border.Effect>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="133"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <views:CycleNavigation x:Name="CycleNavigation" 
                                           Grid.Column="1" Grid.Row="0" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           OpenCyclePackageNavigation="OnOpenCyclePackageNavigation" 
                                           OpenCycleNavigation="OnOpenCycleNavigation"
                                           OpenSectionNavigation="OnOpenSectionNavigation"
                                           Cycle="{Binding CycleNavigator.CurrentCycle}"
                                           Section="{Binding CycleNavigator.CurrentSection}"
                                           CyclePackage="{Binding CycleNavigator.CurrentCyclePackage}"/>

                        <!--<views:PlaybackControl Grid.Column="2" Grid.Row="0" Margin="0 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           AutomationProperties.AutomationId="MediaShellWindow_PlaybackControl" />-->

                        <Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" 
                            BorderThickness="0 1 0 0"  BorderBrush="{StaticResource CycleNavigationBorderBrush}"
                            Background="{StaticResource PopupBackgroundColorBrush}">
                            <views:CycleDetailsNavigator x:Name="CycleDetailsNavigator" DataContext="{Binding CycleNavigator}"
                                                     AutomationProperties.AutomationId="MediaShellWindow_CycleDetailsNavigator" />
                        </Border>
                    </Grid>
                </Border>
                <GridSplitter Grid.Column="0"  Grid.Row="1"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Top"
                          ResizeDirection="Rows"
                          Focusable="True"
                          Height="3"
                          AutomationProperties.AutomationId="MediaShellWindow_CycleNavigationGridSplitter"/>
                <!-- Popups -->
                <Canvas x:Name="PopupCanvas" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2">

                    <i:Interaction.Triggers>
                        <interaction:InteractionRequestTrigger SourceObject="{Binding MainMenuInteractionRequest}">
                            <interaction:InteractionAction Width="650" Height="450" Modal="True" IsToggle="True" ToggleSourceName="FileMenuButton" >
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:MainMenuDialog Margin="48 0 0 0" AutomationProperties.AutomationId="MediaShellWindow_MainMenuDialog" />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding EditMenuInteractionRequest}">
                            <interaction:InteractionAction Modal="True" IsToggle="True" ToggleSourceName="EditMenuButton" >
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:EditMenuDialog Margin="98 0 0 0" AutomationProperties.AutomationId="MediaShellWindow_EditMenuDialog" />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding ViewMenuInteractionRequest}">
                            <interaction:InteractionAction Modal="True" IsToggle="True" ToggleSourceName="ViewMenuButton" >
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:ViewMenuDialog Margin="148 0 0 0" AutomationProperties.AutomationId="MediaShellWindow_ViewMenuDialog" />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding ShowCycleNavigation}">
                            <interaction:CallMethodAction TargetObject="{Binding ElementName=Root, Path=.}" MethodName="OpenCycleNavigation"/>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding ShowSectionNavigation}">
                            <interaction:CallMethodAction TargetObject="{Binding ElementName=Root, Path=.}" MethodName="OpenSectionNavigation" />
                        </interaction:InteractionRequestTrigger>


                    </i:Interaction.Triggers>
                </Canvas>

                <Canvas x:Name="PopupCanvasLeft" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0">
                    <i:Interaction.Triggers>
                        <interaction:InteractionRequestTrigger SourceObject="{Binding FormulaEditorInteractionRequest}">
                            <interaction:InteractionAction Modal="True" Width="424" Height="380" CanvasRight="-1" CanvasTop="0">
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:FormulaEditorDialog MaxFormulaDropDownHeight="263" />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding AnimationEditorInteractionRequest}">
                            <interaction:InteractionAction Modal="True" Width="300" Height="100" CanvasRight="-1" CanvasTop="0">
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:AnimationEditorDialog />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding FormulaNavigationEditorInteractionRequest}">
                            <interaction:InteractionAction Modal="True" Width="424" Height="300" CanvasRight="-1" CanvasBottom="0">
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:FormulaEditorDialog MaxFormulaDropDownHeight="263" />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding TriggerNavigationEditorInteractionRequest}">
                            <interaction:InteractionAction Modal="True" Width="212" Height="300" CanvasRight="-1" CanvasBottom="0">
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:TriggerEditorDialog />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding AnimationNavigationEditorInteractionRequest}">
                            <interaction:InteractionAction Modal="True" Width="300" Height="100" CanvasRight="-1" CanvasBottom="0">
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:AnimationEditorDialog />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>

                        <interaction:InteractionRequestTrigger SourceObject="{Binding ConsistencyInteractionRequest}">
                            <interaction:InteractionAction Modal="True" CanvasLeft="5" Height="300" CanvasBottom="0" IsToggle="True">
                                <interaction:InteractionAction.Dialog>
                                    <interaction1:ConsistencyCheckDialog />
                                </interaction:InteractionAction.Dialog>
                            </interaction:InteractionAction>
                        </interaction:InteractionRequestTrigger>
                    </i:Interaction.Triggers>
                </Canvas>
            </Grid>
            <Canvas x:Name="ErrorCanvas" Grid.Row="0" Grid.Column="0">
                <i:Interaction.Triggers>
                    <interaction:InteractionRequestTrigger SourceObject="{Binding ConnectionExceptionInteractionRequest}">
                        <interaction:InteractionAction Width="400" Height="250" Modal="false" x:Name="ConnectionExceptionInteraction">
                            <interaction:InteractionAction.CanvasLeft>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualWidth" />
                                    <Binding ElementName="ConnectionExceptionInteraction" Path="Width" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasLeft>
                            <interaction:InteractionAction.CanvasTop>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualHeight" />
                                    <Binding ElementName="ConnectionExceptionInteraction" Path="Height" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasTop>
                            <interaction:InteractionAction.Dialog>
                                <clientViews:ConnectionExceptionDialog AutomationProperties.AutomationId="MediaShellWindow_ConnectionExceptionDialog" />
                            </interaction:InteractionAction.Dialog>
                        </interaction:InteractionAction>
                    </interaction:InteractionRequestTrigger>

                    <interaction:InteractionRequestTrigger SourceObject="{Binding ChangePasswordInteractionRequest}">
                        <interaction:InteractionAction Width="250" Height="150" Modal="True" x:Name="ChangePasswordInteraction">
                            <interaction:InteractionAction.CanvasLeft>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualWidth" />
                                    <Binding ElementName="ChangePasswordInteraction" Path="Width" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasLeft>
                            <interaction:InteractionAction.CanvasTop>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualHeight" />
                                    <Binding ElementName="ChangePasswordInteraction" Path="Height" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasTop>
                            <interaction:InteractionAction.Dialog>
                                <clientViews:ChangePasswordDialog AutomationProperties.AutomationId="MediaShellWindow_ChangePasswordDialog" />
                            </interaction:InteractionAction.Dialog>
                        </interaction:InteractionAction>
                    </interaction:InteractionRequestTrigger>

                    <interaction:InteractionRequestTrigger SourceObject="{Binding ShowCheckInDialogInteractionRequest}">
                        <interaction:InteractionAction Width="480" Height="260" Modal="False"
                                                           ToggleSourceName="CheckInDialogButton" x:Name="CheckInDialogInteraction">
                            <interaction:InteractionAction.CanvasLeft>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualWidth" />
                                    <Binding ElementName="CheckInDialogInteraction" Path="Width" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasLeft>
                            <interaction:InteractionAction.CanvasTop>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualHeight" />
                                    <Binding ElementName="CheckInDialogInteraction" Path="Height" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasTop>
                            <interaction:InteractionAction.Dialog>
                                <clientViews:CheckInDialog AutomationProperties.AutomationId="MediaShellWindow_CheckInDialog" />
                            </interaction:InteractionAction.Dialog>
                        </interaction:InteractionAction>
                    </interaction:InteractionRequestTrigger>
                    <interaction:InteractionRequestTrigger SourceObject="{Binding AboutScreenRequest}">
                        <interaction:InteractionAction Modal="True"
                                                       Width="600" Height="196" x:Name="AboutScreenDialogInteraction">
                            <interaction:InteractionAction.CanvasLeft>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualWidth" />
                                    <Binding ElementName="AboutScreenDialogInteraction" Path="Width" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasLeft>
                            <interaction:InteractionAction.CanvasTop>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualHeight" />
                                    <Binding ElementName="AboutScreenDialogInteraction" Path="Height" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasTop>
                            <interaction:InteractionAction.Dialog>
                                <components:AboutScreen />
                            </interaction:InteractionAction.Dialog>
                        </interaction:InteractionAction>
                    </interaction:InteractionRequestTrigger>

                    <interaction:InteractionRequestTrigger SourceObject="{Binding OptionDialogRequest}">
                        <interaction:InteractionAction x:Name="OptionsDialog" Modal="False" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Width="600" Height="300" Parent="{Binding ElementName=DialogLayer}">
                            <interaction:InteractionAction.CanvasLeft>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualWidth" />
                                    <Binding ElementName="OptionsDialog" Path="Width" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasLeft>
                            <interaction:InteractionAction.CanvasTop>
                                <MultiBinding Converter="{StaticResource HalfValueConverter}">
                                    <Binding ElementName="ErrorCanvas" Path="ActualHeight" />
                                    <Binding ElementName="OptionsDialog" Path="Height" />
                                </MultiBinding>
                            </interaction:InteractionAction.CanvasTop>
                            <interaction:InteractionAction.Dialog>
                                <options:OptionsDialog>
                                    <options:OptionsDialog.Resources>
                                        <converters:TimeSpanToIntegerConverter x:Key="TimeSpanToIntegerConverter" />
                                        <Style TargetType="ComboBox" BasedOn="{StaticResource FlatStyleCombobox}" />
                                        
                                        <ObjectDataProvider x:Key="textModeEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}" >
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="directXRenderer:TextMode"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                        <ObjectDataProvider x:Key="qualityModeEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}" >
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="directXRenderer:FontQualities"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                        <ObjectDataProvider x:Key="videoModeEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}" >
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="directXRenderer:VideoMode"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                        <DataTemplate DataType="{x:Type options1:LanguageOptionGroupViewModel}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock ToolTip="{Binding GroupLabelTooltip}" Text="{Binding Label}" 
                                                           Margin="0 0 5 0" VerticalAlignment="Center"/>
                                                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
                                                          ToolTip="{Binding GroupLabelTooltip}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding DisplayName}" />
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                                <StackPanel Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                                                    <Image Source="pack://application:,,,/Gorba.Center.Common.Wpf.Views;Component/Icons/warning_16x16.png"
                                                           VerticalAlignment="Top" Margin="0 0 5 0" />
                                                    <TextBlock Text="{Binding RestartInformation}" VerticalAlignment="Top"/>
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type options2:LocalResourceOptionGroupViewModel}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock ToolTip="{x:Static resources:MediaStrings.OptionsDialog_LocalResourceAfterTooltip}"
                                                           Text="{x:Static resources:MediaStrings.OptionsDialog_LocalResourceAfterLabel}"
                                                           Margin="0 0 5 0" VerticalAlignment="Center" />
                                                <telerik:RadNumericUpDown Grid.Column="1"
                                                                          ToolTip="{x:Static resources:MediaStrings.OptionsDialog_LocalResourceAfterTooltip}"
                                                                          SmallChange="1"
                                                                          NumberDecimalDigits="0" Minimum="0" Maximum="{Binding MaxDays}"
                                                                          Value="{Binding RemoveLocalResourceAfter, Converter={StaticResource TimeSpanToIntegerConverter}, ConverterParameter=Days}"/>
                                            </Grid>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type options2:RendererOptionGroupViewModel}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                
                                                <TextBlock ToolTip="{x:Static resources:MediaStrings.OptionsDialog_RendererTextModeTooltip}"
                                                            Text="{x:Static resources:MediaStrings.OptionsDialog_RendererTextModeLabel}"
                                                            Margin="0 0 5 5" VerticalAlignment="Center" />
                                                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Source={StaticResource textModeEnum}}"
                                                            SelectedItem="{Binding SelectedTextMode, Mode=TwoWay}"
                                                            ToolTip="{x:Static resources:MediaStrings.OptionsDialog_RendererTextModeTooltip}"
                                                            Margin="0 0 0 5" />
                                                <TextBlock Grid.Row="1" Grid.Column="0"
                                                            ToolTip="{x:Static resources:MediaStrings.OptionsDialog_RendererFontQualityTooltip}"
                                                            Text="{x:Static resources:MediaStrings.OptionsDialog_RendererFontQualityLabel}"
                                                            Margin="0 0 5 5" VerticalAlignment="Center" />
                                                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Source={StaticResource qualityModeEnum}}"
                                                            SelectedItem="{Binding SelectedFontQuality, Mode=TwoWay}"
                                                            ToolTip="{x:Static resources:MediaStrings.OptionsDialog_RendererFontQualityTooltip}"
                                                            Margin="0 0 0 5" />
                                                <TextBlock Grid.Row="2" Grid.Column="0"
                                                           ToolTip="{x:Static resources:MediaStrings.OptionsDialog_RendererVideoModeTooltip}"
                                                           Text="{x:Static resources:MediaStrings.OptionsDialog_RendererVideoModeLabel}"
                                                           Margin="0 0 5 5" VerticalAlignment="Center" />
                                                <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Source={StaticResource videoModeEnum}}"
                                                          SelectedItem="{Binding SelectedVideoMode, Mode=TwoWay}"
                                                              ToolTip="{x:Static resources:MediaStrings.OptionsDialog_RendererVideoModeTooltip}"
                                                          Margin="0 0 0 5" />
                                            </Grid>
                                        </DataTemplate>
                                    </options:OptionsDialog.Resources>
                                </options:OptionsDialog>
                            </interaction:InteractionAction.Dialog>
                        </interaction:InteractionAction>
                    </interaction:InteractionRequestTrigger>
                </i:Interaction.Triggers>
            </Canvas>

            <StatusBar Grid.Row="1"
                   Foreground="White" 
                   BorderThickness="0 1 0 0"
                   BorderBrush="{StaticResource StatusbarBorderBrush}"
                   Background="{StaticResource StatusbarBackgroundBrush}" 
                   ItemsSource="{Binding Path=StatusNotifications}"
                   AutomationProperties.AutomationId="MediaShellWindow_StatusBar">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBar.Template>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal">
                                <!--<ProgressBar Width="100" Margin="5" Style="{StaticResource ProgressbarReset}"
                                         Minimum="0" Maximum="1" 
                                         Value="{Binding OverallProgress.Progress}"/>-->
                                <Button Margin="5 0 5 0" Style="{StaticResource FlatIconButton}" Command="{Binding CheckInProjectCommand}" IsEnabled="{Binding MediaApplicationState.CurrentProject.IsCheckedIn, Converter={StaticResource InvertedBooleanConverter}}">
                                    <Image Width="16" Height="16" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding MediaApplicationState.CurrentProject, Converter={StaticResource NotNullConverter}}" Value="True" />
                                                            <Condition Binding="{Binding MediaApplicationState.CurrentProject.IsCheckedIn}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Source" Value="/Gorba.Center.Media.Core;component/Resources/Images/Icons/Database-Save.png" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="ToolTip" Value="{x:Static resources:MediaStrings.MediaShell_NotCheckedInTooltip}" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding MediaApplicationState.CurrentProject, Converter={StaticResource NotNullConverter}}" Value="True" />
                                                            <Condition Binding="{Binding MediaApplicationState.CurrentProject.IsCheckedIn}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Source" Value="/Gorba.Center.Media.Core;component/Resources/Images/Icons/Database.png" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="ToolTip" Value="{x:Static resources:MediaStrings.MediaShell_CheckedInTooltip}" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>

                                <Button Style="{StaticResource FlatIconButton}" Command="{Binding ConsistencyDialogCommand}">
                                    <Image Width="16" Height="16">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="/Gorba.Center.Media.Core;component/Resources/Images/Icons/ok_16x16.png" />
                                                
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding MediaApplicationState.ConsistencyMessages, Converter={StaticResource ConsistencyConverter}}" Value="{x:Static consistency:Severity.Warning}">
                                                        <Setter Property="Source" Value="/Gorba.Center.Media.Core;component/Resources/Images/Icons/warning_16x16.png" />
                                                        <Setter Property="ToolTip" Value="{x:Static resources:MediaStrings.Consistency_WarningTooltip}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding MediaApplicationState.ConsistencyMessages, Converter={StaticResource ConsistencyConverter}}" Value="{x:Static consistency:Severity.Error}">
                                                        <Setter Property="Source" Value="/Gorba.Center.Media.Core;component/Resources/Images/Icons/error_16x16.png" />
                                                        <Setter Property="ToolTip" Value="{x:Static resources:MediaStrings.Consistency_ErrorTooltip}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding MediaApplicationState.CompatibilityMessages, Converter={StaticResource ConsistencyConverter}}" Value="{x:Static consistency:Severity.CompatibilityIssue}">
                                                        <Setter Property="Source" Value="/Gorba.Center.Media.Core;component/Resources/Images/Icons/error_16x16.png" />
                                                        <Setter Property="ToolTip" Value="{x:Static resources:MediaStrings.Compatibility_ErrorTooltip}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>

                                <ItemsPresenter/>

                                <!--debug only-->
                                <TextBlock Text=" - " VerticalAlignment="Center"/>
                                <!--Text="{Binding MediaApplicationState.CurrentProjectState}"-->
                                <TextBlock  VerticalAlignment="Center" Foreground="Black">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value=""/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProjectState}" Value="{x:Static projectStates:ProjectStates.CheckedIn}">
                                                    <Setter Property="Text" Value="{x:Static resources:MediaStrings.StatusBar_ProjectState_CheckedIn}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProjectState}" Value="{x:Static projectStates:ProjectStates.Modified}">
                                                    <Setter Property="Text" Value="{x:Static resources:MediaStrings.StatusBar_ProjectState_Modified}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProjectState}" Value="{x:Static projectStates:ProjectStates.NoProject}">
                                                    <Setter Property="Text" Value="{x:Static resources:MediaStrings.StatusBar_ProjectState_NoProject}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding MediaApplicationState.CurrentProjectState}" Value="{x:Static projectStates:ProjectStates.Saved}">
                                                    <Setter Property="Text" Value="{x:Static resources:MediaStrings.StatusBar_ProjectState_Saved}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </StatusBar.Template>
                <StatusBar.Resources>
                    <DataTemplate DataType="{x:Type notifications:StatusNotification}">
                        <TextBlock Text="{Binding Title}"/>
                    </DataTemplate>
                </StatusBar.Resources>
            </StatusBar>
        </Grid>
    </telerik:RadBusyIndicator>
</frameworkViews:TrackingWindow>
