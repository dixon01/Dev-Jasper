<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
                    xmlns:views="clr-namespace:Gorba.Center.Media.Core.Views;assembly=Gorba.Center.Media.Core"
                    xmlns:commonviews="clr-namespace:Gorba.Center.Common.Wpf.Views;assembly=Gorba.Center.Common.Wpf.Views"
                    xmlns:components="clr-namespace:Gorba.Center.Common.Wpf.Views.Components;assembly=Gorba.Center.Common.Wpf.Views"
                    xmlns:resources="clr-namespace:Gorba.Center.Media.Core.Resources;assembly=Gorba.Center.Media.Core">

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource WindowButtonForgroundColorBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Margin="{TemplateBinding Padding}"
                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverWindowButtonColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HoverWindowButtonForgroundColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressedWindowButtonColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource PressedWindowButtonForgroundColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="MenuButton" BasedOn="{StaticResource ButtonReset}">
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Background" Value="{StaticResource MainMenuItemBackgroundColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource MainMenuItemForegroundColorBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MainMenuItemHoverBackgroundColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainMenuItemPressedBackgroundColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource MainMenuItemDisabledForegroundColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowIcon" TargetType="{x:Type ContentControl}">
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainWindowStyle" TargetType="commonviews:TrackingWindow">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="commonviews:TrackingWindow">
                    <Border x:Name="WindowBorder" Background="{StaticResource WindowBackgroundColorBrush}">
                        <Grid>
                            <Border BorderThickness="1">
                                <AdornerDecorator>
                                    <Grid x:Name="LayoutRoot">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="15" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter Grid.Row="1" Grid.RowSpan="2" Margin="0"/>

                                        <Rectangle x:Name="HeaderBackground" Height="35" Fill="{DynamicResource WindowBackgroundColorBrush}" 
                                                   VerticalAlignment="Top" Grid.Row="0"/>

                                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            
                                            <Grid VerticalAlignment="Center" Margin="0 0 5 0">
                                                <ContentPresenter Content="{TemplateBinding LoginInformation}"/>
                                            </Grid>
                                            
                                            <Button Command="{Binding Source={x:Static shell:SystemCommands.MinimizeWindowCommand}}" ToolTip="minimize" Style="{StaticResource WindowButtonStyle}">
                                                <Button.Content>
                                                    <Grid Width="30" Height="35" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            <Grid Margin="1,0,1,0">
                                                <Button x:Name="Restore" Command="{Binding Source={x:Static shell:SystemCommands.RestoreWindowCommand}}" ToolTip="restore" Visibility="Collapsed" Style="{StaticResource WindowButtonStyle}">
                                                    <Button.Content>
                                                        <Grid Width="30" Height="35" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                                                            <Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button x:Name="Maximize" Command="{Binding Source={x:Static shell:SystemCommands.MaximizeWindowCommand}}" ToolTip="maximize" Style="{StaticResource WindowButtonStyle}">
                                                    <Button.Content>
                                                        <Grid Width="31" Height="35">
                                                            <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                            <Button Command="{Binding Source={x:Static shell:SystemCommands.CloseWindowCommand}}" ToolTip="close"  Style="{StaticResource WindowButtonStyle}">
                                                <Button.Content>
                                                    <Grid Width="30" Height="35" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" 
                                                              StrokeThickness="1.5"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>

                                        <StackPanel Grid.Row="0" Orientation="Horizontal">

                                            <commonviews:WindowIcon Width="43" Height="35" HorizontalAlignment="Left" Style="{StaticResource WindowIcon}">
                                                <Image Source="{TemplateBinding Icon}" Width="16" Height="16" Margin="-1 -4 0 0"/>
                                            </commonviews:WindowIcon>

                                            <ItemsControl ItemsSource="{TemplateBinding MenuItems}" Margin="5 0 0 0">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            
                                        </StackPanel>

                                        <components:TextBlockWithChangeIndicator Grid.Row="0" x:Name="WindowTitleTextBlock" IsDirty="{TemplateBinding IsDirty}" 
                                                                            Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis" Background="Transparent"
                                                                            VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center"  Margin="8 -1 0 0"  FontSize="16">
                                            <components:TextBlockWithChangeIndicator.Style>
                                                <Style TargetType="components:TextBlockWithChangeIndicator">
                                                    <Setter Property="Foreground" Value="{StaticResource WindowTitleTextColorBrush}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                                                            <Setter Property="Foreground" Value="{StaticResource DeactiveWindowTitleTextColorBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </components:TextBlockWithChangeIndicator.Style>
                                        </components:TextBlockWithChangeIndicator>
                                        
                                        <Grid Grid.Row="2">
                                            <Path x:Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1" HorizontalAlignment="Right"
                                                    Stroke="{StaticResource ResizeGripDotsColorBrush}" StrokeThickness="1" Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                        </Grid>
                                    </Grid>
                                </AdornerDecorator>
                            </Border>
                            
                            <Border BorderThickness="1">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderBrush" Value="{StaticResource OuterWindowBorderColorBrush}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                                                <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0" GlassFrameThickness="1" CaptionHeight="35" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolWindowStyle" TargetType="commonviews:TrackingWindow">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="commonviews:TrackingWindow">
                    <Border x:Name="WindowBorder" Background="{StaticResource WindowBackgroundColorBrush}">
                        <Grid>
                            <Border BorderThickness="1">
                                <AdornerDecorator>
                                    <Grid x:Name="LayoutRoot">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="15" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter Grid.Row="1" Grid.RowSpan="2" Margin="0"/>

                                        <Rectangle x:Name="HeaderBackground" Height="35" Fill="{DynamicResource WindowBackgroundColorBrush}" 
                                                   VerticalAlignment="Top" Grid.Row="0"/>

                                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    shell:WindowChrome.IsHitTestVisibleInChrome="True">

                                            <Button Command="{Binding Path=CloseCommand, ElementName=Root}" ToolTip="{x:Static resources:MediaStrings.CsvEditor_Close}"  Style="{StaticResource WindowButtonStyle}">
                                                <Button.Content>
                                                    <Grid Width="30" Height="35" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" 
                                                              StrokeThickness="1.5"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>

                                        <components:TextBlockWithChangeIndicator Grid.Row="0" x:Name="WindowTitleTextBlock" IsDirty="{TemplateBinding IsDirty}" 
                                                                            Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis" Background="Transparent"
                                                                            VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center"  Margin="8 -1 0 0"  FontSize="16">
                                            <components:TextBlockWithChangeIndicator.Style>
                                                <Style TargetType="components:TextBlockWithChangeIndicator">
                                                    <Setter Property="Foreground" Value="{StaticResource WindowTitleTextColorBrush}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                                                            <Setter Property="Foreground" Value="{StaticResource DeactiveWindowTitleTextColorBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </components:TextBlockWithChangeIndicator.Style>
                                        </components:TextBlockWithChangeIndicator>

                                        <Grid Grid.Row="2">
                                            <Path x:Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1" HorizontalAlignment="Right"
                                                    Stroke="{StaticResource ResizeGripDotsColorBrush}" StrokeThickness="1" Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                        </Grid>
                                    </Grid>
                                </AdornerDecorator>
                            </Border>

                            <Border BorderThickness="1">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderBrush" Value="{StaticResource OuterWindowBorderColorBrush}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                                                <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0" GlassFrameThickness="1" CaptionHeight="35" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>