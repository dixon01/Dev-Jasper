<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation">
    <!--<Style x:Key="MediaTextBoxStyle" TargetType="TextBox">
        -->
    <!--<Setter Property="Background" Value="{StaticResource TextBoxBackgroundColorBrush}"/>-->
    <!--
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundColorBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxHighlightFrameColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        -->
    <!--<ScrollViewer  Margin="{TemplateBinding Padding}" VerticalScrollBarVisibility="Hidden" ToolTipService.ToolTip="{TemplateBinding Text}" x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}"/>-->
    <!--
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" BorderThickness="0"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBoxMouseOverFrameColorBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBoxHighlightFrameColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBoxHighlightFrameColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ContentHost"  Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFE8EDF9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="TextBox" BasedOn="{StaticResource MediaTextBoxStyle}" />

    <Style TargetType="TextBox" BasedOn="{StaticResource MediaTextBoxStyle}" x:Key="ValidationTextBoxStyle">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBlockDefaultForegroundColorBrush}"/>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Foreground" Value="{StaticResource ListViewItemForegroundColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource ListViewItemBackgroundColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListViewItemBorderColorBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedListViewItemBackgroundColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadListBoxCheckBoxItemStyle" TargetType="telerik:RadListBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Foreground" Value="{telerik:Windows8Resource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadListBoxItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.15" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"/>
                        <Border x:Name="MouseOverBorder" Opacity="0" Background="{telerik:Windows8Resource ResourceKey=StrongBrush}"/>
                        <Border x:Name="SelectedBorder" Background="{TemplateBinding Background}" Visibility="Collapsed" SnapsToDevicePixels="True"/>
                        <ContentControl x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                        <Border x:Name="FocusVisual" Opacity="0" BorderThickness="1" BorderBrush="{telerik:Windows8Resource ResourceKey=MarkerBrush}" SnapsToDevicePixels="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundColorBrush}"/>
    </Style>

    <Style x:Key="FlatContextMenuItem" TargetType="MenuItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource MainMenuItemHighlightedBackgroundColorBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" Value="{StaticResource MainMenuItemHighlightedBackgroundColorBrush}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Background" Value="{StaticResource MainMenuItemBackgroundColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource MainMenuItemForegroundColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                <ColumnDefinition Width="13"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter 
                                    Name="Icon"
                                    Margin="6,0,6,0"
                                    MinWidth="16"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon"/>
                            <Border Name="Check"  
                                    Width="13" Height="13" 
                                    Visibility="Collapsed"
                                    Margin="6,0,6,0" 
                                    Background="red"
                                    BorderThickness="1"
                                    BorderBrush="red">
                                <Path Name="CheckMark"
                                      Width="7" Height="7" 
                                      Visibility="Hidden" 
                                      SnapsToDevicePixels="False" 
                                      Stroke="red"
                                      StrokeThickness="2"
                                      Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                            <ContentPresenter Name="HeaderHost"
                                              Grid.Column="1"
                                              ContentSource="Header"
                                              VerticalAlignment="Center"
                                              Margin="8 0 0 0"
                                              RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{x:Null}" />
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <TextBlock x:Name="InputGestureText"
                                              Grid.Column="2"
                                              Text="{TemplateBinding InputGestureText}"
                                              Margin="10,3,0,3"
                                              DockPanel.Dock="Right" 
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--collapse if no content is set-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Header" Value="{x:Null}" />
                                <Condition Property="Icon" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="true">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MainMenuItemHoverBackgroundColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="HeaderHost" Property="TextElement.Foreground" Value="{StaticResource MainMenuItemDisabledForegroundColorBrush}"/>
                            <Setter TargetName="Icon" Property="Opacity" Value="0.2"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>


    </Style>
</ResourceDictionary>