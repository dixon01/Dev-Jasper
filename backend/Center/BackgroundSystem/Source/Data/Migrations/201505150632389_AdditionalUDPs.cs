// <auto-generated />
namespace Gorba.Center.BackgroundSystem.Data.Migrations
{
    using System.Data.Entity.Migrations;
    
    public partial class AdditionalUDPs : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.UserUserDefinedProperties",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        CreatedOn = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastModifiedOn = c.DateTime(precision: 7, storeType: "datetime2"),
                        Version = c.Int(nullable: false),
                        Value = c.String(),
                        PropertyDefinition_Id = c.Int(nullable: false),
                        User_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.UserDefinedProperties", t => t.PropertyDefinition_Id, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.User_Id)
                .Index(t => t.PropertyDefinition_Id)
                .Index(t => t.User_Id);
            
            CreateTable(
                "dbo.UpdateGroupUserDefinedProperties",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        CreatedOn = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastModifiedOn = c.DateTime(precision: 7, storeType: "datetime2"),
                        Version = c.Int(nullable: false),
                        Value = c.String(),
                        PropertyDefinition_Id = c.Int(nullable: false),
                        UpdateGroup_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.UserDefinedProperties", t => t.PropertyDefinition_Id, cascadeDelete: true)
                .ForeignKey("dbo.UpdateGroups", t => t.UpdateGroup_Id)
                .Index(t => t.PropertyDefinition_Id)
                .Index(t => t.UpdateGroup_Id);
            
            CreateTable(
                "dbo.TenantUserDefinedProperties",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        CreatedOn = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastModifiedOn = c.DateTime(precision: 7, storeType: "datetime2"),
                        Version = c.Int(nullable: false),
                        Value = c.String(),
                        PropertyDefinition_Id = c.Int(nullable: false),
                        Tenant_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.UserDefinedProperties", t => t.PropertyDefinition_Id, cascadeDelete: true)
                .ForeignKey("dbo.Tenants", t => t.Tenant_Id)
                .Index(t => t.PropertyDefinition_Id)
                .Index(t => t.Tenant_Id);
            
            CreateTable(
                "dbo.UserRoleUserDefinedProperties",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        CreatedOn = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastModifiedOn = c.DateTime(precision: 7, storeType: "datetime2"),
                        Version = c.Int(nullable: false),
                        Value = c.String(),
                        PropertyDefinition_Id = c.Int(nullable: false),
                        UserRole_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.UserDefinedProperties", t => t.PropertyDefinition_Id, cascadeDelete: true)
                .ForeignKey("dbo.UserRoles", t => t.UserRole_Id)
                .Index(t => t.PropertyDefinition_Id)
                .Index(t => t.UserRole_Id);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.UserRoleUserDefinedProperties", "UserRole_Id", "dbo.UserRoles");
            DropForeignKey("dbo.UserRoleUserDefinedProperties", "PropertyDefinition_Id", "dbo.UserDefinedProperties");
            DropForeignKey("dbo.TenantUserDefinedProperties", "Tenant_Id", "dbo.Tenants");
            DropForeignKey("dbo.TenantUserDefinedProperties", "PropertyDefinition_Id", "dbo.UserDefinedProperties");
            DropForeignKey("dbo.UpdateGroupUserDefinedProperties", "UpdateGroup_Id", "dbo.UpdateGroups");
            DropForeignKey("dbo.UpdateGroupUserDefinedProperties", "PropertyDefinition_Id", "dbo.UserDefinedProperties");
            DropForeignKey("dbo.UserUserDefinedProperties", "User_Id", "dbo.Users");
            DropForeignKey("dbo.UserUserDefinedProperties", "PropertyDefinition_Id", "dbo.UserDefinedProperties");
            DropIndex("dbo.UserRoleUserDefinedProperties", new[] { "UserRole_Id" });
            DropIndex("dbo.UserRoleUserDefinedProperties", new[] { "PropertyDefinition_Id" });
            DropIndex("dbo.TenantUserDefinedProperties", new[] { "Tenant_Id" });
            DropIndex("dbo.TenantUserDefinedProperties", new[] { "PropertyDefinition_Id" });
            DropIndex("dbo.UpdateGroupUserDefinedProperties", new[] { "UpdateGroup_Id" });
            DropIndex("dbo.UpdateGroupUserDefinedProperties", new[] { "PropertyDefinition_Id" });
            DropIndex("dbo.UserUserDefinedProperties", new[] { "User_Id" });
            DropIndex("dbo.UserUserDefinedProperties", new[] { "PropertyDefinition_Id" });
            DropTable("dbo.UserRoleUserDefinedProperties");
            DropTable("dbo.TenantUserDefinedProperties");
            DropTable("dbo.UpdateGroupUserDefinedProperties");
            DropTable("dbo.UserUserDefinedProperties");
        }
    }
}
