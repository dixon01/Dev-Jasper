@{
    ViewBag.Title = "Tests";
}

<h2>Please select your test</h2>
<div class="row">
    <ul>
        <li>@this.Html.ActionLink("TenantsQueryAsync", "TenantsQueryAsync")</li>
        <li>@this.Html.ActionLink("UnitsQueryAsync", "UnitsQueryAsync")</li>
        <li>@(this.Html.ActionLink("TenantWithUnitsQueryAsync", "TenantWithUsersQueryAsync"))</li>
        <li>@(this.Html.ActionLink("UnitWithUpdateCommandsQueryAsync", "UnitWithUpdateCommandsQueryAsync"))</li>
        <li>@(this.Html.ActionLink("ChangeTrackingManagerAsync", "ChangeTrackingManagerAsync"))</li>
        <li>@(this.Html.ActionLink("AddUpdateGroupAsync", "AddUpdateGroupAsync"))</li>
        <li>@this.Html.ActionLink("AssociationUserRoleFilterAsync", "AssociationUserRoleFilterAsync")</li>
        <li>@this.Html.ActionLink("AuthorizationDataScopeFilterAsync", "AuthorizationDataScopeFilterAsync")</li>
        <li>@this.Html.ActionLink("EnumSetOnAddAsync", "EnumSetOnAddAsync")</li>
        <li>@this.Html.ActionLink("ParentChildAsync", "ParentChildAsync")</li>
        <li>@this.Html.ActionLink("ExceptionOnCommitAsync", "ExceptionOnCommitAsync")</li>
    </ul>
</div>
<div class="row">
    <div class="col-lg-1"></div>
    <div class="col-lg-10"><a href="#" id="test">Run</a></div>
    <div class="col-lg-1"></div>
</div>
<div class="row">
    <div class="col-lg-1"></div>
    <div class="col-lg-10"><div id="results"></div></div>
    <div class="col-lg-1"></div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var test = $.connection.testHub;
            // Create a function that the hub can call back to display messages.
            test.client.updateResultAsync = function (testResult) {
                console.log('received result ' + testResult.RunId);
                // Add the message to the page.
                $('#results').append('<li><strong>' + htmlEncode(testResult.Name)
                    + '</strong>: ' + htmlEncode(testResult.RunId) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            //$('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#test').click(function () {
                    // Call the Send method on the hub.
                    test.server.startTestAsync('test');
                    // Clear text box and reset focus for next comment.
                    //$('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}