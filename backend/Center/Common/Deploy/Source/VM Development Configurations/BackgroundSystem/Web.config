<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>
  <connectionStrings>
    <add connectionString="Data Source=.\sqlexpress;Initial Catalog=Gorba_CenterOnline;User ID=gorba_center_online;Password=gorba;MultipleActiveResultSets=True" name="DataContext" providerName="System.Data.SqlClient" />
    <add connectionString="Data Source=.\sqlexpress;Initial Catalog=Gorba_CenterControllers;User ID=gorba_center_controllers;Password=gorba" name="ControllersPersistence" providerName="System.Data.SqlClient" />
    <add connectionString="Data Source=.\sqlexpress;Initial Catalog=Gorba_CenterControllersMetabase;User ID=gorba_center_controllers_metabase;Password=gorba" name="ControllersMetabase" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="DataContextConfigurationEntryName" value="DataContext" />
    <add key="ControllersPersistenceConfigurationEntryName" value="ControllersPersistence" />
    <add key="ControllersMetabase" value="ControllersMetabase" />
    <add key="UseDataServiceFake" value="true" />
    <add key="UseUnitServiceFake" value="false" />
    <add key="UseCommsMock" value="true" />
    <add key="webpages:Version" value="1.0.0.0" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!-- Uncomment and change to use a file stored in a different path. The path can be absolute (but the AppPool
    user MUST have read access to it!) or "relative", as the default value (~/Configuration/BackgroundSystemConfiguration.xml)
    which will be used if the key is not specified -->
    <!--<add key="ConfigurationPath" value="~/Configuration/BackgroundSystemConfiguration.xml"/>-->
  </appSettings>
  <system.web>
    <compilation debug="false" targetFramework="4.0.1">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <httpModules>
      <remove name="Session" />
      <remove name="WindowsAuthentication" />
      <remove name="FormsAuthentication" />
      <remove name="PassportAuthentication" />
      <remove name="RoleManager" />
      <remove name="AnonymousIdentification" />
      <remove name="Profile" />
    </httpModules>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.net>
    <connectionManagement>
      <add address="*" maxconnection="512" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <workflowExtensions>
            <add extension="Gorba.Center.BackgroundSystem.ActivityInstance.Extensions.StateTracker, Gorba.Center.BackgroundSystem.ActivityInstance" />
          </workflowExtensions>
          <!--<etwTracking profileName="HealthMonitoring Tracking Profile"/>-->
          <sqlWorkflowInstanceStore connectionStringName="ControllersPersistence" />
          <workflowIdle timeToPersist="00:01:00" timeToUnload="00:02:00" />
          <!-- uncomment workflow service trace to output the trace of workflows in debug window. Warning: possible bugs in the component -->
          <!--<workflowServiceTrace/>-->
          <serviceThrottling maxConcurrentCalls="512" maxConcurrentInstances="10240" maxConcurrentSessions="512" />
          <activityTaskLifecycleConfiguration activityInstanceControllerRetryDelay="00:00:30" activityTaskBaseId="10000" commsRetryDelay="00:01:00" maxSendingAttempts="10" />
          <activityInstanceControllerConfiguration activityTaskLifecycleRetryDelay="00:00:30" />
        </behavior>        
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <bindings>
      <basicHttpBinding>
        <binding closeTimeout="00:00:30" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" openTimeout="00:00:30" receiveTimeout="00:01:00" sendTimeout="00:01:00">
          <readerQuotas maxArrayLength="2147483647" maxBytesPerRead="65536" maxDepth="512" maxStringContentLength="2147483647" maxNameTableCharCount="2147483647" />
        </binding>
        <!-- <binding closeTimeout="00:01:00" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" name="WorkflowServices" openTimeout="00:02:00" receiveTimeout="00:02:00" sendTimeout="00:02:00">
          <readerQuotas maxArrayLength="2147483647" maxBytesPerRead="65536" maxDepth="512" maxStringContentLength="2147483647" maxNameTableCharCount="2147483647" />
        </binding> -->
      </basicHttpBinding>
      <netTcpBinding>
        <binding closeTimeout="00:01:00" listenBacklog="256" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxConnections="256" maxReceivedMessageSize="2147483647" openTimeout="00:02:00" portSharingEnabled="true" receiveTimeout="00:02:00" sendTimeout="00:02:00">
          <readerQuotas maxArrayLength="2147483647" maxBytesPerRead="65536" maxDepth="512" maxStringContentLength="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None" />
        </binding>
        <!-- <binding name="WorkflowServices" portSharingEnabled="true">
          <security mode="None"></security>
        </binding> -->
      </netTcpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost/BackgroundSystem/ActivityController.xamlx" binding="basicHttpBinding" contract="Gorba.Center.Common.ServiceModel.IActivityControllerService" name="activityController" />
      <endpoint address="http://localhost/BackgroundSystem/ActivityController.xamlx" binding="basicHttpBinding" contract="activityController" name="activityController" />
      <endpoint address="http://localhost/BackgroundSystem/ActivityTaskLifecycle.xamlx" binding="basicHttpBinding" contract="Gorba.Center.Common.ServiceModel.WorkflowServices.IActivityTaskLifecycleService" name="activityLifecycle" />
      <endpoint address="http://localhost/BackgroundSystem/ActivityTaskLifecycle.xamlx" binding="basicHttpBinding" contract="activityLifecycle" name="activityLifecycle" />
      <endpoint address="net.tcp://{CommsAddress}:8000/CommS/ManagementService" binding="netTcpBinding" contract="Gorba.Center.CommS.Wcf.ServiceModel.ICommsService" name="commsService" />
      <endpoint address="net.tcp://{CommsAddress}:8000/CommS/MessagingService" binding="netTcpBinding" contract="Gorba.Center.CommS.Wcf.ServiceModel.ICommsMessagingService" name="commsMessagingService" />
      <endpoint address="net.tcp://{CommsAddress}:8000/CommS/MessageSubscriptionService" binding="netTcpBinding" contract="Gorba.Center.CommS.Wcf.ServiceModel.ICommsMessageSubscription" name="commsMessageSubscriptionService" />                                                                
      <!-- <endpoint address="net.tcp://localhost:808/BackgroundSystem/ItcsManagerSubscriptionService.svc" binding="netTcpBinding" contract="Gorba.Center.Common.ServiceModel.Itcs.IItcsManagerSubscriptionService" name="itcsManagerSubscriptionService" /> -->
    </client>
    <extensions>
      <behaviorExtensions>
        <!-- uncomment to be able to add the workflow service trace -->
        <!--<add name="workflowServiceTrace" type="Microsoft.Activities.Extensions.Diagnostics.WorkflowServiceTraceElement, Microsoft.Activities.Extensions"/>-->
        <add name="workflowExtensions" type="Microsoft.Activities.Extensions.ServiceModel.WorkflowExtensionsElement, Microsoft.Activities.Extensions" />
        <add name="activityTaskLifecycleConfiguration" type="Gorba.Center.BackgroundSystem.ActivityLifecycle.Extensions.ActivityTaskLifecycleConfigurationElement, Gorba.Center.BackgroundSystem.ActivityLifecycle" />
        <add name="activityInstanceControllerConfiguration" type="Gorba.Center.BackgroundSystem.ActivityInstance.Extensions.ActivityInstanceControllerConfigurationElement, Gorba.Center.BackgroundSystem.ActivityInstance" />
      </behaviorExtensions>
    </extensions>
    <services>
      <service name="Gorba.Center.BackgroundSystem.Core.Itcs.ItcsService">
        <endpoint address="" binding="netTcpBinding" contract="Gorba.Center.Common.ServiceModel.Itcs.IItcsService">
        </endpoint>
      </service>
      <service name="Gorba.Center.Host.BackgroundSystem.WebHost.CommsMessagingServiceMock">
        <endpoint address="" binding="netTcpBinding" contract="Gorba.Center.CommS.Wcf.ServiceModel.ICommsMessagingService" />
      </service>
      <service name="Gorba.Center.Host.BackgroundSystem.WebHost.CommsMessageSubscriptionMock">
        <endpoint address="" binding="netTcpBinding" contract="Gorba.Center.CommS.Wcf.ServiceModel.ICommsMessageSubscription" />
      </service>
      <service name="Gorba.Center.Common.ServiceModel.IActivityControllerService">
        <endpoint address="wce" binding="netTcpBinding" kind="workflowControlEndpoint" />
      </service>
    </services>
    <standardEndpoints>
      <workflowControlEndpoint>
        <standardEndpoint />
      </workflowControlEndpoint>
    </standardEndpoints>
  <diagnostics wmiProviderEnabled="true">
      <messageLogging 
           logEntireMessage="true" 
           logMalformedMessages="true"
           logMessagesAtServiceLevel="true" 
           logMessagesAtTransportLevel="true"
           maxMessagesToLog="3000" 
       />
  </diagnostics>
  </system.serviceModel>
  <system.runtime.caching>
    <memoryCache>
      <namedCaches>
        <add cacheMemoryLimitMegabytes="0" name="ItcsAreaFilterEvaluator" physicalMemoryLimitPercentage="0" pollingInterval="00:10:00" />
      </namedCaches>
    </memoryCache>
  </system.runtime.caching>
<system.diagnostics>
<trace autoflush="true" indentsize="3" />
  <sources>
    <source name="System.ServiceModel"
            switchValue="Information, ActivityTracing"
            propagateActivity="true" >
      <listeners>
        <add name="xml"/>
      </listeners>
    </source>
    <source name="System.ServiceModel.MessageLogging">
      <listeners>
        <add name="xml"/>
      </listeners>
    </source>
  </sources>
  <sharedListeners>
  <!-- Select the desired litener. The RollingXmlWriterTraceListener is experimental. The Gorba.Lef.WcfExtensions.Tracing dll is required -->
  <add name="xml" 
                   type="System.Diagnostics.XmlWriterTraceListener" 
                   initializeData= "D:\Gorba\Center\Logs\BackgroundSystem\Traces.svclog" />
  <!-- <add name="xml" 
                   type="Gorba.Lef.WcfExtensions.Tracing.RollingXmlWriterTraceListener, Gorba.Lef.WcfExtensions.Tracing" 
                   initializeData= "D:\Gorba\Center\Logs\BackgroundSystem\Traces.svclog" /> -->
  </sharedListeners>
 </system.diagnostics>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" internalLogFile="D:\Gorba\Center\Logs\BackgroundSystem\nlog.txt">
    <variable name="logDirectory" value="D:\Gorba\Center\Logs\BackgroundSystem" />
    <targets async="true">
      <!-- Archive size: 100MB -->
      <target name="file" xsi:type="File" fileName="${logDirectory}\BackgroundSystem_${shortDate}.log" layout="${time} ${uppercase:${level}} ${logger} [${threadid}:${threadname}] ${message}${onexception: ${newline}${exception:format=tostring}}" createDirs="true" archiveAboveSize="104857600" archiveNumbering="Sequence" concurrentWrites="true" maxArchiveFiles="10" keepFileOpen="false" />
    </targets>
    <rules>
      <logger name="Gorba.Common.Utility.Core.Performance.NLogPerformanceLogInfoWriter" minlevel="Off" final="true" />
      <logger name="*" minlevel="Debug" writeTo="file" />
    </rules>
  </nlog>
</configuration>
