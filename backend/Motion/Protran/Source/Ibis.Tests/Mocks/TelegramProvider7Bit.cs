// --------------------------------------------------------------------------------------------------------------------
// <copyright file="TelegramProvider7Bit.cs" company="Gorba AG">
//   Copyright © 2011-2012 Gorba AG. All rights reserved.
// </copyright>
// <summary>
//   
// </summary>
// --------------------------------------------------------------------------------------------------------------------

namespace Gorba.Motion.Protran.Ibis.Tests.Mocks
{
    using System.Collections.Generic;

    /// <summary>
    /// Moqed serial port device capable to return
    /// telegram in 7 bit format.
    /// </summary>
    public class TelegramProvider7Bit : TelegramProvider
    {
        // hereafter a set of well known valid telegrams with 7 bits.
        private readonly byte[] bit7TlgDs001 = new byte[] { 0x6C, 0x32, 0x39, 0x35, 0x0D, 0x20 };
        private readonly byte[] bit7TlgDs001A = new byte[] { 0x6C, 0x45, 0x32, 0x39, 0x0D, 0x50 };
        private readonly byte[] bit7TlgDs005 = new byte[] { 0x75, 0x31, 0x32, 0x31, 0x32, 0x0D, 0x07 };
        private readonly byte[] bit7TlgDs006 = new byte[] { 0x64, 0x31, 0x32, 0x31, 0x32, 0x31, 0x32, 0x0D, 0x15 };
        private readonly byte[] bit7TlgDs010B = new byte[] { 0x78, 0x49, 0x30, 0x31, 0x0D, 0x42 };
        private readonly byte[] bit7TlgDs020 = new byte[] { 0x61, 0x38, 0x0D, 0x2B };
        private readonly byte[] bit7TlgDs021 = new byte[] { 0x61, 0x42, 0x38, 0x32, 0x53, 0x74, 0x6F, 0x70, 0x31, 0x0D, 0x52 };
        private readonly byte[] bit7TlgDs021A = new byte[] { 0x61, 0x4C, 0x38, 0x30, 0x32, 0x03, 0x30, 0x31, 0x04, 0x53, 0x31, 0x05, 0x0D, 0x04 };
        private readonly byte[] bit7TlgHpw074 = new byte[] { 0x73, 0x4E, 0x38, 0x30, 0x31, 0x0D, 0x76 };
        private readonly byte[] bit7TlgGO002DevOk = new byte[] { 0x61, 0x55, 0x30, 0x33, 0x32, 0x30, 0x31, 0x31, 0x31, 0x31, 0x32, 0x33, 0x34, 0x35, 0x31, 0x30, 0x31, 0x30, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x49, 0x6C, 0x20, 0x43, 0x61, 0x69, 0x72, 0x6F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x35 };
        private readonly byte[] bit7TlgGO002DevAhead = new byte[] { 0x61, 0x55, 0x30, 0x33, 0x32, 0x30, 0x31, 0x31, 0x32, 0x31, 0x32, 0x33, 0x34, 0x35, 0x31, 0x32, 0x30, 0x30, 0x30, 0x31, 0x2B, 0x30, 0x31, 0x32, 0x49, 0x6C, 0x20, 0x43, 0x61, 0x69, 0x72, 0x6F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x2D };
        private readonly byte[] bit7TlgGO002DevDelay = new byte[] { 0x61, 0x55, 0x30, 0x33, 0x32, 0x30, 0x31, 0x31, 0x32, 0x31, 0x32, 0x33, 0x34, 0x35, 0x31, 0x32, 0x30, 0x30, 0x30, 0x31, 0x2D, 0x30, 0x31, 0x32, 0x49, 0x6C, 0x20, 0x43, 0x61, 0x69, 0x72, 0x6F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x2B };

        /// <summary>
        /// Initializes a new instance of the <see cref="TelegramProvider7Bit"/> class.
        /// whit all the available telegrams.
        /// </summary>
        public TelegramProvider7Bit()
        {
            this.Telegrams = new List<byte[]>
            {
                this.bit7TlgDs001,
                this.bit7TlgDs001A,
                this.bit7TlgDs005,
                this.bit7TlgDs006,
                this.bit7TlgDs010B,
                this.bit7TlgDs020,
                this.bit7TlgDs021,
                this.bit7TlgDs021A,
                this.bit7TlgHpw074,
                this.bit7TlgGO002DevOk,
                this.bit7TlgGO002DevAhead,
                this.bit7TlgGO002DevDelay
            };

            this.Is16Bits = false;
        }
    }
}
